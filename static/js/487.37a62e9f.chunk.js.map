{"version":3,"file":"static/js/487.37a62e9f.chunk.js","mappings":"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","sources":["views/Orders/components/AcknowledgeInfo.js","views/Orders/components/BillingInfo.js","views/Orders/components/RequesterInfo.js","views/Orders/CreateOrders.js"],"sourcesContent":["import {\r\n  Box,\r\n  FormControl,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport RequestsApi from 'api/requests';\r\nimport axios from 'axios';\r\nimport { every, find, get, isEmpty } from 'lodash';\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport rightIcon from '../../../assets/images/accept.png';\r\nimport crossIcon from '../../../assets/images/delete.png';\r\n// import { Button, Step, StepLabel, Stepper, TextField, Card, CardHeader, CardContent, Divider, Grid, Typography } from '@mui/material';\r\n\r\n// export function AckInfo({\r\n//   formAckData,\r\n//   handleAckChange,\r\n//   isCandidateAckForm = false,\r\n// }) {\r\n//   const [clientData, setClientData] = useState([]);\r\n//   const location = useLocation();\r\n//   const queryParams = new URLSearchParams(location.search);\r\n//   const clientId = queryParams.get('clientId');\r\n//   const userDetail = localStorage.getItem('user');\r\n//   const clientDtail = find(\r\n//     clientData,\r\n//     (data) => data?.id === JSON.parse(userDetail)?.client_id || clientId\r\n//   );\r\n//   const acknowledgeDetail = clientDtail?.candidateAuthForm?.startsWith('file:')\r\n//     ? clientDtail?.candidateAuthForm?.substring(5).trim()\r\n//     : clientDtail?.candidateAuthForm;\r\n\r\n//   // get(JSON.parse(userDetail), 'client_id', ''),\r\n\r\n//   const InputStyle = {\r\n//     width: '300px', // Adjust the width and height as needed\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (isCandidateAckForm) {\r\n//       try {\r\n//         let response = axios\r\n//           .get(`https://imranks.pythonanywhere.com/api/users/clients`)\r\n//           ?.then((resp) => {\r\n//             let resData = resp.data.data;\r\n//             setClientData(resData);\r\n//           });\r\n//       } catch (e) {\r\n//         console.error(e);\r\n//       }\r\n//     } else {\r\n//       try {\r\n//         let response = RequestsApi.ListClients();\r\n//         response.then((resp) => {\r\n//           let resData = JSON.parse(resp.data.data);\r\n//           setClientData(resData);\r\n//         });\r\n//       } catch (e) {\r\n//         console.error(e);\r\n//       }\r\n//     }\r\n//   }, [isCandidateAckForm]);\r\n\r\n//   return (\r\n//     <>\r\n//       <Typography w='100%' textAlign={'center'} fontWeight='normal'>\r\n//         Acknowledgement\r\n//       </Typography>\r\n\r\n//       <Grid sm={12}>\r\n//         <Grid sm={12}>\r\n//           {clientDtail?.candidateAuthForm?.startsWith('file:') ? (\r\n//             <div>\r\n//               <a\r\n//                 href={`https://imranks.pythonanywhere.com/fileuploads/${acknowledgeDetail}`}\r\n//                 target='_blank'\r\n//                 rel='noopener noreferrer'\r\n//               >\r\n//                 {acknowledgeDetail}\r\n//               </a>\r\n//             </div>\r\n//           ) : (\r\n//             <div\r\n//               dangerouslySetInnerHTML={{ __html: acknowledgeDetail }}\r\n//               style={{ padding: '3rem' }}\r\n//             />\r\n//           )}\r\n//         </Grid>\r\n//         <Grid sm={12}>\r\n//           <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n//             <FormControl id='ackby' colSpan={[1, 2]}>\r\n//               <TextField\r\n//                 label='Acknowledged By Name'\r\n//                 placeholder='Acknowledged By Name'\r\n//                 style={{ ...InputStyle }}\r\n//                 shadow='sm'\r\n//                 fontSize={{\r\n//                   sm: 'sm',\r\n//                 }}\r\n//                 value={formAckData.ackby}\r\n//                 onChange={handleAckChange('ackby')}\r\n//               />\r\n//             </FormControl>\r\n//             <FormControl id='acknowledged' colSpan={[1, 2]}>\r\n//               <TextField\r\n//                 type='checkbox'\r\n//                 style={{ ...InputStyle }}\r\n//                 label='acknowledged'\r\n//                 placeholder='acknowledged'\r\n//                 shadow='sm'\r\n//                 fontSize={{\r\n//                   sm: 'sm',\r\n//                 }}\r\n//                 value={formAckData.acknowledged}\r\n//                 onChange={handleAckChange('acknowledged')}\r\n//               />\r\n//             </FormControl>\r\n//           </Box>\r\n//         </Grid>\r\n//       </Grid>\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport function AckInfo({ orderId, totalRequiredData = [], formData = {} }) {\r\n  const [checks, setChecks] = useState([]);\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(totalRequiredData)) {\r\n      const updatedData = totalRequiredData.map((item) => {\r\n        const isComplete = every(item, (value) => value !== '');\r\n        return {\r\n          ...item,\r\n          complete: isComplete,\r\n        };\r\n      });\r\n      setChecks(updatedData);\r\n    }\r\n  }, [totalRequiredData]);\r\n\r\n  const orderDetail = {\r\n    'First Name': get(formData, 'first_name', ''),\r\n    'Last Name': get(formData, 'last_name', ''),\r\n    'Middle Name': get(formData, 'father_name', ''),\r\n    Email: get(formData, 'email', ''),\r\n    'National ID': get(formData, 'uid', ''),\r\n    DOB: get(formData, 'dob', ''),\r\n    'Mobile No': get(formData, 'phone', ''),\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      sx={{\r\n        margin: '0px !important',\r\n        paddingBottom: '2rem',\r\n        borderCollapse: 'collapse',\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          width: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          textDecoration: 'underline',\r\n          fontWeight: 550,\r\n          fontSize: '0.875rem!important',\r\n          pb: 3,\r\n        }}\r\n      >\r\n        Review Order\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        xs={12}\r\n        sm={4}\r\n        md={4}\r\n        lg={4}\r\n        sx={{\r\n          borderRight: '1px solid #ddd',\r\n          '& .MuiGrid-item': {\r\n            padding: '10px',\r\n            borderBottom: '1px solid #ddd',\r\n          },\r\n        }}\r\n      >\r\n        {Object.entries(orderDetail).map(([label, value], index) => (\r\n          <>\r\n            <Grid item xs={3.5} key={index}>\r\n              <Typography variant='subtitle1' sx={{ fontWeight: 500 }}>\r\n                {label}:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={8.5}>\r\n              {value}\r\n            </Grid>\r\n          </>\r\n        ))}\r\n      </Grid>\r\n      <Grid item xs={12} sm={8}>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            gap: 1,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              marginLeft: '10px',\r\n              width: '66%',\r\n              display: 'flex',\r\n              gap: 8,\r\n            }}\r\n          >\r\n            <Typography variant='subtitle1' sx={{ fontWeight: 500 }}>\r\n              Client:\r\n            </Typography>\r\n            <span>{formData?.client_name}</span>\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: '50%',\r\n              display: 'flex',\r\n              gap: 8,\r\n            }}\r\n          >\r\n            <Typography variant='subtitle1' sx={{ fontWeight: 500 }}>\r\n              Package:\r\n            </Typography>\r\n            <span>{formData?.checks_package}</span>\r\n          </div>\r\n        </Box>\r\n        <TableContainer sx={{ pt: '20px' }}>\r\n          <Table variant='striped' className='tableChild' width='100%'>\r\n            <TableBody>\r\n              {checks?.map((item, index) => (\r\n                <Fragment key={index}>\r\n                  {index % 2 === 0 && (\r\n                    <TableRow\r\n                      sx={{\r\n                        border: '1px solid #ddd',\r\n                        borderRight: 'none !important',\r\n                        borderLeft: 'none !important',\r\n                      }}\r\n                    >\r\n                      <TableCell width='40%' sx={{ p: '10px !important' }}>\r\n                        {/* <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name='category'\r\n                            value={item.check_name}\r\n                            onChange={(e) => props.handleChecksChange(e, index)}\r\n                            checked={item.isAdded}\r\n                            variant='outlined'\r\n                            disabled={props?.id}\r\n                          />\r\n                        }\r\n                        label={item.check_name}\r\n                      /> */}\r\n                        {item?.check_name}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        width='10%'\r\n                        sx={{\r\n                          p: '10px !important',\r\n                          borderRight: '1px solid #ddd',\r\n                        }}\r\n                      >\r\n                        {item?.complete ? (\r\n                          <span\r\n                            style={{\r\n                              color: 'green',\r\n                              fontWeight: 550,\r\n                              fontSize: '1.3rem',\r\n                            }}\r\n                          >\r\n                            ✓\r\n                          </span>\r\n                        ) : (\r\n                          <span\r\n                            style={{\r\n                              color: 'red',\r\n                              fontWeight: 550,\r\n                              fontSize: '1.3rem',\r\n                            }}\r\n                          >\r\n                            ✗\r\n                          </span>\r\n                        )}\r\n                      </TableCell>\r\n\r\n                      {index + 1 < checks?.length && (\r\n                        <>\r\n                          <TableCell width='40%' sx={{ p: '8.2px !important' }}>\r\n                            {checks[index + 1]?.check_name}\r\n                          </TableCell>\r\n                          <TableCell width='10%' sx={{ p: '8.2px !important' }}>\r\n                            {checks[index + 1]?.complete ? (\r\n                              <span\r\n                                style={{\r\n                                  color: 'green',\r\n                                  fontWeight: 550,\r\n                                  fontSize: '1.3rem',\r\n                                }}\r\n                              >\r\n                                ✓\r\n                              </span>\r\n                            ) : (\r\n                              <span\r\n                                style={{\r\n                                  color: 'red',\r\n                                  fontWeight: 550,\r\n                                  fontSize: '1.3rem',\r\n                                }}\r\n                              >\r\n                                ✗\r\n                              </span>\r\n                            )}\r\n                          </TableCell>\r\n                        </>\r\n                      )}\r\n                    </TableRow>\r\n                  )}\r\n                </Fragment>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport RequestsApi from 'api/requests';\r\nimport { isEmpty, map } from 'lodash';\r\nimport { BiErrorCircle } from 'react-icons/bi';\r\n\r\nexport function BillingInfo({\r\n  handleBillChange,\r\n  formBillData,\r\n  setFormBillData,\r\n  formData,\r\n}) {\r\n  const [clientDetail, setClientDetail] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const billingIdentifiers = !isEmpty(clientDetail.terms)\r\n    ? map(JSON?.parse(clientDetail.terms), (value, key) => ({\r\n        key,\r\n        values: value,\r\n      }))\r\n    : [];\r\n\r\n  const handleSelectChange = (key, value) => {\r\n    setFormBillData((prevData) => ({\r\n      ...prevData,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const getClient = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await RequestsApi.getClientById(formData?.client_id);\r\n      setClientDetail(JSON.parse(response?.data?.data));\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClient();\r\n  }, [formData?.client_id]);\r\n\r\n  return (\r\n    <>\r\n      <Typography\r\n        w='100%'\r\n        textAlign={'center'}\r\n        sx={{\r\n          textDecoration: 'underline',\r\n          fontWeight: 550,\r\n          fontSize: '0.875rem!important',\r\n        }}\r\n      >\r\n        Billing Account\r\n      </Typography>\r\n      {loading ? (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <CircularProgress color='inherit' size={20} />\r\n        </div>\r\n      ) : (\r\n        <Grid\r\n          container\r\n          sx={{\r\n            margin: '0px !important',\r\n            paddingBottom: '2rem',\r\n            borderCollapse: 'collapse',\r\n            pt: '1rem',\r\n            paddingX: 2,\r\n          }}\r\n        >\r\n          {!isEmpty(billingIdentifiers) ? (\r\n            billingIdentifiers?.map((item) => (\r\n              <React.Fragment key={item.key}>\r\n                <Grid item xs={3}>\r\n                  <Typography\r\n                    variant='subtitle1'\r\n                    sx={{ fontWeight: 500, mb: 2 }}\r\n                  >\r\n                    {item.key}:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={9} sx={{ mb: 2 }}>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      value={formBillData[item.key] || ''}\r\n                      onChange={(e) =>\r\n                        handleSelectChange(item.key, e.target.value)\r\n                      }\r\n                      placeholder={item.key}\r\n                    >\r\n                      {item.values.map((value) => (\r\n                        <MenuItem key={value} value={value}>\r\n                          {value}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                width: '100%',\r\n                justifyContent: 'center',\r\n                fontSize: '0.9rem',\r\n                fontWeight: '500',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <BiErrorCircle size={50} color={'#bf1e2e'} />\r\n              Billing Identifiers are not found\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { includes } from 'lodash';\r\nimport { TextField, Grid, Typography } from '@mui/material';\r\nimport { clientRoles, handleSentenceChange } from 'views/Utils/Common';\r\n\r\nexport function RequesterInfo({\r\n  handleReqChange,\r\n  formReqData,\r\n  setFormReqData,\r\n}) {\r\n  const InputStyle = {\r\n    width: '300px',\r\n  };\r\n\r\n  const userDetail =\r\n    localStorage.getItem('user') && JSON.parse(localStorage.getItem('user'));\r\n\r\n  return (\r\n      <>\r\n        <Typography\r\n          w='100%'\r\n          textAlign={'center'}\r\n          sx={{\r\n            textDecoration: 'underline',\r\n            fontWeight: 550,\r\n            fontSize: '0.875rem!important',\r\n          }}\r\n        >\r\n          Order Request Details\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          sx={{\r\n            margin: '0px !important',\r\n            paddingBottom: '2rem',\r\n            borderCollapse: 'collapse',\r\n            pt: '1rem',\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            lg={6}\r\n            sx={{\r\n              borderRight: '1px solid #ddd',\r\n              '& .MuiGrid-item': {\r\n                padding: '10px',\r\n                borderBottom: '1px solid #ddd',\r\n                '&:first-child': {\r\n                  borderTop: '1px solid #ddd',\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <Grid item xs={6} sx={{ borderTop: '1px solid #ddd!important' }}>\r\n              <Typography variant='subtitle1' sx={{ fontWeight: 500 }}>\r\n                Order Requested By:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sx={{ borderTop: '1px solid #ddd' }}>\r\n              <TextField\r\n                fullWidth\r\n                placeholder='Order Requested By'\r\n                shadow='sm'\r\n                fontSize={{\r\n                  sm: 'sm',\r\n                }}\r\n                value={formReqData?.requesterName}\r\n                onChange={(e) =>\r\n                  handleSentenceChange(\r\n                    'requesterName',\r\n                    e?.target?.value,\r\n                    setFormReqData\r\n                  )\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant='subtitle1' sx={{ fontWeight: 500 }}>\r\n                Phone:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                placeholder='Phone'\r\n                fullWidth\r\n                shadow='sm'\r\n                fontSize={{\r\n                  sm: 'sm',\r\n                }}\r\n                value={formReqData?.phone}\r\n                onChange={handleReqChange('phone')}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            xs={12}\r\n            sm={6}\r\n            md={6}\r\n            lg={6}\r\n            sx={{\r\n              '& .MuiGrid-item': {\r\n                padding: '10px',\r\n                borderBottom: '1px solid #ddd',\r\n                '&:first-child': {\r\n                  borderTop: '1px solid #ddd',\r\n                },\r\n                // '&:last-child': {\r\n                //   borderBottom: 'none', // No bottom border for last row\r\n                // },\r\n              },\r\n            }}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Typography variant='subtitle1' sx={{ fontWeight: 500 }}>\r\n                Email:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sx={{ borderTop: '1px solid #ddd!important' }}>\r\n              <TextField\r\n                placeholder='Email'\r\n                fullWidth\r\n                shadow='sm'\r\n                fontSize={{\r\n                  sm: 'sm',\r\n                }}\r\n                value={formReqData?.email}\r\n                onChange={handleReqChange('email')}\r\n              />\r\n            </Grid>\r\n            {/* {!includes(clientRoles, userDetail?.role) && (\r\n              <>\r\n                <Grid item xs={6}>\r\n                  <Typography variant='subtitle1' sx={{ fontWeight: 500 }}>\r\n                    Date of Birth:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    placeholder='DOB'\r\n                    fullWidth\r\n                    shadow='sm'\r\n                    fontSize={{\r\n                      sm: 'sm',\r\n                    }}\r\n                    value={formReqData.dob}\r\n                    onChange={handleReqChange('dob')}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            )} */}\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n} from '@mui/material';\r\nimport RequestsApi from 'api/requests';\r\nimport { useAuth } from 'auth-context/auth.context';\r\nimport {\r\n  concat,\r\n  filter,\r\n  find,\r\n  findIndex,\r\n  flatMap,\r\n  get,\r\n  includes,\r\n  isEmpty,\r\n  isEqual,\r\n  join,\r\n  map,\r\n  omit,\r\n  size,\r\n  some,\r\n  sortBy,\r\n  unionBy,\r\n  values,\r\n} from 'lodash';\r\nimport moment from 'moment';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { clientRoles, toastMessage } from 'views/Utils/Common';\r\nimport { AckInfo } from './components/AcknowledgeInfo';\r\nimport { AutoGenFormInfo } from './components/AutoGenFormInfo';\r\nimport { BillingInfo } from './components/BillingInfo';\r\nimport { CandidateInfo } from './components/CandidateInfo';\r\nimport FormPackage from './components/FormPackage';\r\nimport { RequesterInfo } from './components/RequesterInfo';\r\n\r\nexport default function CreateOrders() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(undefined);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [orderId, setOrderId] = useState(0);\r\n  const [orderInfoId, setOrderInfoId] = useState(0);\r\n  const [orderChecksId, setOrderChecksId] = useState(0);\r\n  const [dynFormData, setDynFormData] = useState([]);\r\n  const [checksData, setChecksData] = useState([]);\r\n  const [subRowList, setSubRowList] = useState([]);\r\n  const [requiredData, setRequiredData] = useState({});\r\n  const [totalRequiredData, setTotalRequiredData] = useState({});\r\n  // 'INITIATED',\r\n  // 'DRAFT',\r\n\r\n  const userDetail =\r\n    localStorage.getItem('user') && JSON.parse(localStorage.getItem('user'));\r\n\r\n  const combineArraysSafely = (terms1, terms2) => {\r\n    try {\r\n      const array1 = JSON?.parse(terms1);\r\n      const array2 = JSON?.parse(terms2);\r\n      return unionBy(array1, array2, 'term_text');\r\n    } catch (error) {\r\n      console.error('Error parsing JSON:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const combinedArray =\r\n    userDetail?.terms && userDetail?.clientInfo?.terms\r\n      ? combineArraysSafely(userDetail?.terms, userDetail?.clientInfo?.terms)\r\n      : userDetail?.terms\r\n      ? combineArraysSafely(userDetail?.terms)\r\n      : userDetail?.clientInfo?.terms\r\n      ? combineArraysSafely(userDetail?.clientInfo?.terms)\r\n      : [];\r\n\r\n  const terms = filter(\r\n    combinedArray,\r\n    (data) => data?.term_component === 'Order Form'\r\n  );\r\n\r\n  const intialsteps = ['Package', 'Billing', 'Requester', 'Review'];\r\n  const [steps, setSteps] = useState(intialsteps);\r\n  const [errorMessage, setErrorMessage] = useState({\r\n    first_name: false,\r\n    last_name: false,\r\n    email: false,\r\n    dob: false,\r\n    uid: false,\r\n    isCheckboxChecked: false,\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    checks_package: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    father_name: get(userDetail, 'father_name', ''),\r\n    middle_name: '',\r\n    alias_name: '',\r\n    phone: '',\r\n    email: '',\r\n    dob: '',\r\n    uid: '',\r\n    alter_phone: get(userDetail, 'alter_phone', ''),\r\n    date_created: moment().format('YYYY-MM-DD HH:mm:ss'),\r\n    status: userDetail?.support ? 'INCOMPLETE' : 'DRAFT',\r\n    created_by_id: get(userDetail, '_id', ''),\r\n    created_by_name: get(userDetail, 'username', ''),\r\n    client_id: get(userDetail, 'clientInfo.id', ''),\r\n    client_name: get(userDetail, 'client_name', ''),\r\n    currency: get(userDetail, 'clientInfo.currency', 'INR'),\r\n    country: get(userDetail, 'clientInfo.country', 'India'),\r\n    client_project: '',\r\n  });\r\n\r\n  const [numberedSteps, setNumberedSteps] = useState([]);\r\n\r\n  const [formSubjData, setformSubjData] = useState({\r\n    gender: '',\r\n    address1: '',\r\n    address2: '',\r\n    country: '',\r\n    city: '',\r\n    state: '',\r\n    nationality: '',\r\n    zipcode: '',\r\n  });\r\n\r\n  const [addressDetail, setAddressDetail] = useState({\r\n    Country: '',\r\n    State: '',\r\n    City: '',\r\n    Address: '',\r\n  });\r\n\r\n  const [formBillData, setFormBillData] = useState('');\r\n\r\n  const [formReqData, setFormReqData] = useState({\r\n    requesterName: '',\r\n    phone: '',\r\n    email: '',\r\n    dob: includes(clientRoles, userDetail?.role) ? '-' : '',\r\n    uid: '',\r\n  });\r\n\r\n  const [formAckData, setFormAckData] = useState({\r\n    ackby: '',\r\n    acknowledged: false,\r\n  });\r\n\r\n  const InputStyle = {\r\n    fontSize: '0.675rem',\r\n    marginTop: '2px',\r\n  };\r\n\r\n  const squareIconStyle = {\r\n    borderRadius: '15%', // Set the border radius to 0% for square icons\r\n    width: '32px', // Adjust the width and height as needed\r\n    height: '32px',\r\n    textAlign: 'Center',\r\n    color: '#FFF',\r\n    paddingTop: '5px',\r\n  };\r\n\r\n  const { user } = useAuth();\r\n  let token = user.token;\r\n\r\n  const resetAllState = () => {\r\n    setSteps(intialsteps);\r\n    setData([]);\r\n    setError(undefined);\r\n    setActiveStep(0);\r\n    setOrderId(0);\r\n    setOrderInfoId(0);\r\n    setOrderChecksId(0);\r\n    setDynFormData([]);\r\n    setChecksData([]);\r\n    setSubRowList([]);\r\n    setRequiredData({});\r\n    setTotalRequiredData({});\r\n    setErrorMessage({\r\n      first_name: false,\r\n      last_name: false,\r\n      email: false,\r\n      dob: false,\r\n      uid: false,\r\n      isCheckboxChecked: false,\r\n    });\r\n    setFormData({\r\n      checks_package: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      father_name: get(userDetail, 'father_name', ''),\r\n      middle_name: '',\r\n      alias_name: '',\r\n      phone: '',\r\n      email: '',\r\n      dob: '',\r\n      uid: '',\r\n      alter_phone: get(userDetail, 'alter_phone', ''),\r\n      date_created: moment().format('YYYY-MM-DD HH:mm:ss'),\r\n      status: userDetail?.support ? 'INCOMPLETE' : 'DRAFT',\r\n      created_by_id: get(userDetail, '_id', ''),\r\n      created_by_name: get(userDetail, 'username', ''),\r\n      client_id: get(userDetail, 'clientInfo.id', ''),\r\n      client_name: get(userDetail, 'client_name', ''),\r\n      currency: get(userDetail, 'clientInfo.currency', 'INR'),\r\n      country: get(userDetail, 'clientInfo.country', 'India'),\r\n      client_project: '',\r\n    });\r\n    setformSubjData({\r\n      gender: '',\r\n      address1: '',\r\n      address2: '',\r\n      country: '',\r\n      city: '',\r\n      state: '',\r\n      nationality: '',\r\n      zipcode: '',\r\n    });\r\n    setAddressDetail({\r\n      Country: '',\r\n      State: '',\r\n      City: '',\r\n      Address: '',\r\n    });\r\n    setFormBillData('');\r\n    setFormReqData({\r\n      requesterName: '',\r\n      phone: '',\r\n      email: '',\r\n      dob: includes(clientRoles, userDetail?.role) ? '-' : '',\r\n      uid: '',\r\n    });\r\n    setFormAckData({\r\n      ackby: '',\r\n      acknowledged: false,\r\n    });\r\n  };\r\n\r\n  const nextStep = (orderId) => {\r\n    if (activeStep !== steps?.length - 1 && steps[activeStep]) {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    } else {\r\n      toastMessage('Order created successfully');\r\n      navigate('/order/orders');\r\n    }\r\n  };\r\n\r\n  const prevStep = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleChange = (input) => (e) => {\r\n    setFormData({ ...formData, [input]: e.target.value });\r\n  };\r\n\r\n  const handleChecksChange = (event, index) => {\r\n    const updatedChecksList = [...data];\r\n    updatedChecksList[index].isAdded = event.target.checked;\r\n    updatedChecksList[index].qty = event.target.checked ? 1 : 0;\r\n    setChecksData(updatedChecksList);\r\n\r\n    let newSteps = [...steps];\r\n\r\n    let checkname = updatedChecksList[index].check_name;\r\n    if (event.target.checked) {\r\n      newSteps = newSteps.filter((ns) => ns !== 'Review');\r\n      newSteps.push(updatedChecksList[index].check_name);\r\n      newSteps.push('Review');\r\n    } else {\r\n      newSteps = newSteps.filter((ns) => ns !== checkname);\r\n    }\r\n    const sortedData = [\r\n      ...newSteps.slice(0, 4),\r\n      ...sortBy(newSteps.slice(4, -1)),\r\n      newSteps[newSteps.length - 1],\r\n    ];\r\n    setSteps(sortedData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      try {\r\n        let response = RequestsApi.OrderDetails({\r\n          token: token,\r\n          id: id,\r\n        });\r\n\r\n        response.then((json) => {\r\n          let data = JSON.parse(json['data']['data'])['rowsData'];\r\n          setFormData({\r\n            checks_package: get(data[0], 'checks_package', ''),\r\n            first_name: get(data[0], 'first_name', ''),\r\n            last_name: get(data[0], 'last_name', ''),\r\n            father_name: get(data[0], 'father_name', ''),\r\n            middle_name: '',\r\n            alias_name: get(data[0], 'alias_name', ''),\r\n            phone: get(data[0], 'phone', ''),\r\n            email: get(data[0], 'email', ''),\r\n            dob: get(data[0], 'dob', ''),\r\n            uid: get(data[0], 'uid', ''),\r\n            alter_phone: get(data[0], 'alter_phone', ''),\r\n            client_id: get(data[0], 'client_id', ''),\r\n            client_name: get(data[0], 'client_name', ''),\r\n          });\r\n          const rows = data.map((d) => d.subRows);\r\n          const orderInformationId = find(\r\n            data,\r\n            (i) => i?.order_info\r\n          )?.order_info;\r\n\r\n          const infoData = orderInformationId[0]?.info_data;\r\n          setSubRowList(flatMap(rows));\r\n          setOrderInfoId(orderInformationId[0]?.id);\r\n\r\n          if (!isEmpty(infoData)) {\r\n            const cleanedString = infoData?.replace(/\\\\/g, '');\r\n            const jsonObject = cleanedString ? JSON.parse(cleanedString) : {};\r\n            setFormBillData(get(jsonObject, 'Billing'));\r\n            setFormReqData(get(jsonObject, 'Requester'));\r\n          } else {\r\n            setFormBillData(formBillData);\r\n            setFormReqData(formReqData);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching checks:', error);\r\n      }\r\n    } else {\r\n      resetAllState();\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(subRowList) && id) {\r\n      const iniitalStespName = intialsteps;\r\n      const steps = map(subRowList, (item) => item?.check);\r\n      const indexToInsertAfter = 2;\r\n      iniitalStespName.splice(indexToInsertAfter + 1, 0, ...steps);\r\n      setSteps(iniitalStespName);\r\n      setNumberedSteps([\r\n        'Package',\r\n        'Billing',\r\n        'Requester',\r\n        ...map(subRowList, (item) => item?.check_alias || item?.check),\r\n        'Review',\r\n      ]);\r\n      setOrderId(id);\r\n      setActiveStep(2);\r\n      setOrderChecksId(map(subRowList, (data) => data?.order_checks_id));\r\n    } else {\r\n      setSteps(intialsteps);\r\n      setActiveStep(0);\r\n      setOrderChecksId(0);\r\n    }\r\n  }, [subRowList, id]);\r\n\r\n  const handleQtyChange = (event, index) => {\r\n    const updatedChecksList = [...data];\r\n    updatedChecksList[index].qty = parseInt(event.target.value);\r\n    setChecksData(updatedChecksList);\r\n\r\n    const sourceArray = filter(\r\n      updatedChecksList,\r\n      (item) => item?.isAdded === true\r\n    );\r\n\r\n    const newSteps = [...steps];\r\n\r\n    sourceArray.forEach((item) => {\r\n      const itemIndex = findIndex(newSteps, (data) =>\r\n        isEqual(data, item?.check_name)\r\n      );\r\n      if (itemIndex !== -1) {\r\n        // If item is already present\r\n        const occurrences = newSteps.filter(\r\n          (value) => value === item.check_name\r\n        ).length;\r\n\r\n        if (occurrences > item.qty) {\r\n          // Calculate excess occurrences\r\n          const excessItemsToRemove = occurrences - item.qty;\r\n\r\n          // Find the index of the last occurrence of item.check_name\r\n          const excessItemIndex = newSteps.lastIndexOf(item.check_name);\r\n\r\n          // Remove excess occurrences from the array\r\n          newSteps.splice(\r\n            excessItemIndex - excessItemsToRemove + 1,\r\n            excessItemsToRemove\r\n          );\r\n        } else if (occurrences < item.qty) {\r\n          // If there are less occurrences, add the remaining items after it\r\n          newSteps.splice(\r\n            itemIndex + 1,\r\n            0,\r\n            ...Array.from(\r\n              { length: parseInt(item.qty, 10) - occurrences },\r\n              () => item.check_name\r\n            )\r\n          );\r\n        }\r\n      } else {\r\n        // If item is not present, add it to the array\r\n        newSteps.push(\r\n          item.check_name,\r\n          ...Array.from(\r\n            { length: parseInt(item.qty, 10) - 1 },\r\n            () => item.check_name\r\n          )\r\n        );\r\n      }\r\n    });\r\n\r\n    setSteps(newSteps);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      const counts = {};\r\n      const newNumberedSteps = steps.map((step) => {\r\n        const shortName = find(data, { check_name: step })?.check_alias;\r\n        if (intialsteps.includes(step)) {\r\n          return step;\r\n        } else {\r\n          if (!counts[step]) {\r\n            counts[step] = 0;\r\n          }\r\n          counts[step]++;\r\n          return `${shortName}-${counts[step]}`;\r\n        }\r\n      });\r\n      setNumberedSteps(newNumberedSteps);\r\n    }\r\n  }, [steps]);\r\n\r\n  const handleSubjChange = (input) => (e) => {\r\n    formSubjData['orderId'] = orderId;\r\n    if (input == 'checks_package') {\r\n      formSubjData[input] = e.target.value;\r\n    } else {\r\n      setformSubjData({ ...formSubjData, [input]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleBillChange = (input) => (e) => {\r\n    formBillData['orderId'] = orderId;\r\n    setFormBillData({ ...formBillData, [input]: e.target.value });\r\n  };\r\n\r\n  const handleReqChange = (input) => (e) => {\r\n    formReqData['orderId'] = orderId;\r\n    setFormReqData({ ...formReqData, [input]: e.target.value });\r\n  };\r\n\r\n  const handleAckChange = (input) => (e) => {\r\n    formAckData['orderId'] = orderId;\r\n    setFormAckData({ ...formAckData, [input]: e.target.value });\r\n  };\r\n\r\n  const handleEduChange = (input, e) => {\r\n    setDynFormData({ ...dynFormData, [input]: e.target.value });\r\n  };\r\n\r\n  const submitNow = async (event, button) => {\r\n    let token = user.token;\r\n\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    const isChecked = some(checksData, { isAdded: true });\r\n    const checksArray = sortBy(\r\n      checksData.filter((checksData) => checksData.isAdded == true),\r\n      (item) => steps.indexOf(item.check_name)\r\n    );\r\n\r\n    const cData = map(checksArray, (obj, index) => {\r\n      return {\r\n        ...obj,\r\n        package_included: data?.package_name === 'A LA Carte' ? false : true,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !isEmpty(formData?.first_name) &&\r\n      !isEmpty(formData?.last_name) &&\r\n      !isEmpty(formData?.email) &&\r\n      !isEmpty(formData?.dob) &&\r\n      !isEmpty(formData?.uid) &&\r\n      isChecked\r\n    ) {\r\n      try {\r\n        if (id) {\r\n          const response = await RequestsApi?.updateOrder(formData, id);\r\n          if (response?.data && response?.data?.success === true) {\r\n            nextStep();\r\n          }\r\n        } else {\r\n          const checkDetail = {\r\n            ...formData,\r\n            middle_name: isEmpty(formData?.middle_name)\r\n              ? '-'\r\n              : formData?.middle_name,\r\n            alias_name: isEmpty(formData?.alias_name)\r\n              ? '-'\r\n              : formData?.alias_name,\r\n          };\r\n          let response = await RequestsApi.CreateRequest({\r\n            data: {\r\n              cinfo: omit(checkDetail, ['country', 'currency']),\r\n              pinfo: map(cData, (data) => omit(data, ['package_name'])),\r\n              currency: get(formData, 'currency', 'INR'),\r\n              country: get(formData, 'country', 'India'),\r\n            },\r\n            token: token,\r\n          });\r\n\r\n          if (response?.data && response?.data?.success === false) {\r\n            return setError(response.data.msg);\r\n          } else {\r\n            setOrderId(response?.data?.orderId);\r\n            setOrderInfoId(response?.data?.orderInfoId);\r\n            setOrderChecksId(response?.data?.orderchecksId);\r\n            if (button === 'Save&Close') {\r\n              toastMessage('Order created successfully');\r\n              navigate('/order/orders');\r\n            }\r\n          }\r\n\r\n          let value = event?.target?.dataset['mssg'];\r\n          nextStep(response?.data?.orderId || 0);\r\n        }\r\n      } catch (err) {\r\n        if (err.response) {\r\n          return setError(err.response.data.msg);\r\n        }\r\n        return setError('There has been an error.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderSwitch = (activeStep) => {\r\n    switch (activeStep) {\r\n      case 1:\r\n        return { [steps[activeStep]]: formBillData };\r\n      case 2:\r\n        return { [steps[activeStep]]: formReqData };\r\n      // case 3:\r\n      //   return { [steps[activeStep]]: formSubjData };\r\n      case steps.length - 1:\r\n        return { [steps[activeStep]]: formAckData };\r\n      default:\r\n        return { AutoGenInfo: dynFormData };\r\n    }\r\n  };\r\n\r\n  const submitInfo = async (event) => {\r\n    let token = user.token;\r\n\r\n    if (steps[activeStep] !== 'Review') {\r\n      setTotalRequiredData((prev) => {\r\n        const index = findIndex(prev, (obj) => obj.steps === activeStep);\r\n\r\n        if (index !== -1) {\r\n          return prev.map((obj, i) =>\r\n            i === index ? { ...obj, ...requiredData } : obj\r\n          );\r\n        } else if (!isEmpty(prev)) {\r\n          return [\r\n            ...prev,\r\n            {\r\n              ...requiredData,\r\n              steps: activeStep,\r\n              check_name: steps[activeStep],\r\n            },\r\n          ];\r\n        } else if (!isEmpty(requiredData)) {\r\n          return [\r\n            {\r\n              ...requiredData,\r\n              steps: activeStep,\r\n              check_name: steps[activeStep],\r\n            },\r\n          ];\r\n        } else {\r\n          return {};\r\n        }\r\n      });\r\n    }\r\n\r\n    setAddressDetail({\r\n      Country: dynFormData?.Country\r\n        ? dynFormData?.Country\r\n        : addressDetail?.Country,\r\n      City: dynFormData?.City ? dynFormData?.City : addressDetail?.City,\r\n      State: dynFormData?.State ? dynFormData?.State : addressDetail?.State,\r\n      Address: dynFormData?.Address\r\n        ? dynFormData?.Address\r\n        : addressDetail?.Address,\r\n    });\r\n\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    try {\r\n      let data = {\r\n        step: steps[activeStep],\r\n        id: orderInfoId,\r\n        order_id: orderId,\r\n        client_id: formData?.client_id,\r\n        client_name: formData?.client_name,\r\n      };\r\n\r\n      let newdata = renderSwitch(activeStep);\r\n      data = [data, newdata];\r\n\r\n      let response = [];\r\n\r\n      if (\r\n        activeStep > 2 &&\r\n        activeStep < steps.length &&\r\n        !isEqual(activeStep, steps.length - 1)\r\n      ) {\r\n        const checksId = activeStep === 3 ? 0 : activeStep - 3;\r\n        response = await RequestsApi.UpdateOrderchecks({\r\n          data: concat(data, { check_config: orderChecksId[checksId] }),\r\n          token: token,\r\n          id: orderChecksId[checksId],\r\n        });\r\n      } else if (activeStep === 1) {\r\n        let response = RequestsApi.updateOrder(\r\n          {\r\n            client_project: join(values(formBillData), ' | '),\r\n          },\r\n          orderId\r\n        );\r\n      } else {\r\n        response = await RequestsApi.UpdateRequest({\r\n          data: data,\r\n          token: token,\r\n          id: orderInfoId,\r\n        });\r\n        if (steps[activeStep] === 'Review') {\r\n          let orderData = {\r\n            table_name: 'order_checks',\r\n            field_to_update: 'check_status',\r\n            new_value: 'PENDING',\r\n            table_id: id\r\n              ? map(\r\n                  filter(\r\n                    subRowList,\r\n                    (data) =>\r\n                      data?.status === 'DRAFT' ||\r\n                      data?.status === 'INITIATED' ||\r\n                      data?.status === 'VENDOR'\r\n                  ),\r\n                  'order_checks_id'\r\n                )\r\n              : orderChecksId,\r\n            column_to_match: 'id',\r\n          };\r\n\r\n          let response = RequestsApi.updateOrder(\r\n            {\r\n              status: 'PENDING',\r\n              date_enabled: moment().format('YYYY-MM-DD HH:mm:ss'),\r\n            },\r\n            orderId\r\n          );\r\n          response?.then((res) => {\r\n            if (res?.status === 200) {\r\n              let response1 = RequestsApi.UpdateMultipleAssignee(orderData);\r\n              response1?.then((res) => {\r\n                if (res?.status === 200) {\r\n                  nextStep();\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      if (response.data && response.data.success === false) {\r\n        return setError(response.data.msg);\r\n      }\r\n\r\n      let value = event?.target?.dataset['mssg'];\r\n      setDynFormData([]);\r\n      steps[activeStep] !== 'Review' && nextStep();\r\n    } catch (err) {\r\n      if (err.response) {\r\n        return setError(err.response.data.msg);\r\n      }\r\n      return setError('There has been an error.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isChecked = some(checksData, { isAdded: true });\r\n    setErrorMessage({\r\n      first_name: !isEmpty(formData.first_name)\r\n        ? false\r\n        : errorMessage.first_name,\r\n      last_name: !isEmpty(formData.last_name) ? false : errorMessage.last_name,\r\n      email: !isEmpty(formData.email) ? false : errorMessage.email,\r\n      dob: !isEmpty(formData.dob) ? false : errorMessage.dob,\r\n      uid: !isEmpty(formData.uid) ? false : errorMessage.uid,\r\n      isCheckboxChecked: isChecked ? false : errorMessage.isCheckboxChecked,\r\n    });\r\n  }, [formData, checksData]);\r\n\r\n  const handleSetValidaton = () => {\r\n    const isChecked = some(checksData, { isAdded: true });\r\n    setErrorMessage({\r\n      first_name: isEmpty(formData.first_name) ? true : false,\r\n      last_name: isEmpty(formData.last_name) ? true : false,\r\n      dob: isEmpty(formData.dob) ? true : false,\r\n      uid: isEmpty(formData.uid) ? true : false,\r\n      email: isEmpty(formData.email) ? true : false,\r\n      isCheckboxChecked: isChecked ? false : true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container width='100%'>\r\n        <Grid\r\n          item\r\n          width='100%'\r\n          sx={{\r\n            '& .MuiStepLabel-label': {\r\n              lineHeight: '0.8em',\r\n              marginTop: '5px',\r\n            },\r\n            '& .MuiCardContent-root:last-child': {\r\n              padding: '10px',\r\n            },\r\n            '& .MuiTableCell-root': {\r\n              padding: '10px',\r\n              borderBottom: 'none !important',\r\n            },\r\n            '& .MuiSelect-select': {\r\n              padding: '5px 15px',\r\n            },\r\n            '& .MuiInputBase-input': {\r\n              padding: '5px 5px',\r\n            },\r\n            '& .MuiOutlinedInput-input': {\r\n              padding: '5px 5px',\r\n            },\r\n            '& .MuiFormLabel-root': {\r\n              top: '-11px',\r\n            },\r\n          }}\r\n        >\r\n          <Card>\r\n            <CardContent\r\n              sx={{\r\n                overflowX: 'scroll',\r\n                maxWidth: {\r\n                  xs: '400px',\r\n                  sm: size(steps) > 10 ? '600px' : '100%',\r\n                  md: size(steps) > 10 ? '720px' : '100%',\r\n                  lg: size(steps) > 10 ? '1300px' : '100%',\r\n                  xl: size(steps) > 10 ? '1200px' : '100%',\r\n                },\r\n              }}\r\n            >\r\n              <Stepper activeStep={activeStep} alternativeLabel>\r\n                {steps.map((label, index) => (\r\n                  <Step key={index}>\r\n                    <StepLabel\r\n                      style={{\r\n                        ...InputStyle,\r\n                      }}\r\n                      icon={\r\n                        <div\r\n                          style={{\r\n                            ...squareIconStyle,\r\n                            cursor: 'pointer',\r\n                            backgroundColor:\r\n                              activeStep >= index ? '#1976D2' : '#ccc',\r\n                          }}\r\n                        >\r\n                          {index + 1}\r\n                        </div>\r\n                      }\r\n                      onClick={() => {\r\n                        if (id && index !== steps.length - 1) {\r\n                          setActiveStep(index);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          ...InputStyle,\r\n                        }}\r\n                      >\r\n                        {numberedSteps[index]}\r\n                      </div>\r\n                    </StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n            </CardContent>\r\n          </Card>\r\n          <p></p>\r\n          <Card>\r\n            <CardContent>\r\n              {error}\r\n              {/* <MultiStepForm /> */}\r\n              {activeStep === 0 && (\r\n                <FormPackage\r\n                  token={token}\r\n                  formData={formData}\r\n                  setFormData={setFormData}\r\n                  handleChange={handleChange}\r\n                  handleQtyChange={handleQtyChange}\r\n                  handleChecksChange={handleChecksChange}\r\n                  setSteps={setSteps}\r\n                  steps={steps}\r\n                  data={data}\r\n                  setData={setData}\r\n                  checksData={checksData}\r\n                  setChecksData={setChecksData}\r\n                  errorMessage={errorMessage}\r\n                  intialsteps={intialsteps}\r\n                  terms={terms}\r\n                  setAddressDetail={setAddressDetail}\r\n                  subRowList={subRowList}\r\n                  isCandidateOrder={false}\r\n                /> //\r\n              )}\r\n              {activeStep === 1 && (\r\n                <BillingInfo\r\n                  setFormBillData={setFormBillData}\r\n                  formBillData={formBillData}\r\n                  handleBillChange={handleBillChange}\r\n                  formData={formData}\r\n                />\r\n              )}\r\n              {activeStep === 2 && (\r\n                <RequesterInfo\r\n                  setFormReqData={setFormReqData}\r\n                  formReqData={formReqData}\r\n                  handleReqChange={handleReqChange}\r\n                />\r\n              )}\r\n              {/* {activeStep === 3 && (\r\n                <CandidateInfo\r\n                  formSubjData={formSubjData}\r\n                  setformSubjData={setformSubjData}\r\n                  handleSubjChange={handleSubjChange}\r\n                />\r\n              )} */}\r\n              {activeStep > 2 && activeStep < steps.length - 1 && (\r\n                <AutoGenFormInfo\r\n                  orderId={orderId}\r\n                  orderChecksId={orderChecksId}\r\n                  setOrderChecksId={setOrderChecksId}\r\n                  stepname={numberedSteps[activeStep]}\r\n                  dynFormData={dynFormData}\r\n                  setDynFormData={setDynFormData}\r\n                  handleEduChange={handleEduChange}\r\n                  activeStep={activeStep}\r\n                  requiredData={requiredData}\r\n                  setRequiredData={setRequiredData}\r\n                  addressDetail={addressDetail}\r\n                  isCandidateOrder={false}\r\n                />\r\n              )}\r\n              {activeStep === steps.length - 1 && (\r\n                <AckInfo\r\n                  // formAckData={formAckData}\r\n                  // handleAckChange={handleAckChange}\r\n                  orderId={orderId}\r\n                  totalRequiredData={totalRequiredData}\r\n                  formData={formData}\r\n                />\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n          <p></p>\r\n          <Card>\r\n            <CardContent>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  padding: '1rem',\r\n                }}\r\n              >\r\n                <div>\r\n                  {activeStep !== 0 ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        prevStep();\r\n                      }}\r\n                      // disabled={\r\n                      //   activeStep === 0 ||\r\n                      //   activeStep === 1 ||\r\n                      //   (id && activeStep < 3)\r\n                      // }\r\n                      variant='contained'\r\n                      w='7rem'\r\n                    >\r\n                      Back\r\n                    </Button>\r\n                  ) : null}\r\n                  {activeStep === 0 && (\r\n                    <Button\r\n                      w='12rem'\r\n                      disabled={activeStep === steps.length - 1}\r\n                      data-mssg='continue'\r\n                      variant='contained'\r\n                      onClick={() => {\r\n                        if (activeStep === 0) {\r\n                          handleSetValidaton();\r\n                          submitNow();\r\n                        } else {\r\n                          submitInfo();\r\n                        }\r\n                      }}\r\n                    >\r\n                      {'Save & Continue >>>'}\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {activeStep !== 0 && activeStep !== steps.length - 1 && (\r\n                    <Button\r\n                      w='12rem'\r\n                      sx={{ marginRight: 0.5, backgroundColor: 'grey' }}\r\n                      disabled={activeStep === steps.length - 1}\r\n                      data-mssg='continue'\r\n                      variant='contained'\r\n                      onClick={() => {\r\n                        if (activeStep === 0) {\r\n                          handleSetValidaton();\r\n                          submitNow();\r\n                        } else {\r\n                          submitInfo();\r\n                        }\r\n                      }}\r\n                    >\r\n                      Skip\r\n                    </Button>\r\n                  )}\r\n                  {activeStep !== 0 && activeStep !== steps.length - 1 ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        if (\r\n                          activeStep > 2 &&\r\n                          activeStep < steps.length - 1 &&\r\n                          some(requiredData, isEmpty)\r\n                        ) {\r\n                          toastMessage(\r\n                            'Please fill up the required data of the form',\r\n                            'error'\r\n                          );\r\n                        } else {\r\n                          submitInfo();\r\n                        }\r\n                      }}\r\n                      variant='contained'\r\n                      w='7rem'\r\n                    >\r\n                      Save & Next\r\n                    </Button>\r\n                  ) : null}\r\n                  {activeStep === steps.length - 1 || activeStep === 0 ? (\r\n                    <>\r\n                      {activeStep === steps.length - 1 &&\r\n                        !isEmpty(totalRequiredData) &&\r\n                        some(totalRequiredData, (obj) =>\r\n                          some(obj, (value) => value === '')\r\n                        ) && (\r\n                          <Button\r\n                            w='12rem'\r\n                            sx={{ marginRight: 0.5, backgroundColor: 'grey' }}\r\n                            data-mssg='continue'\r\n                            variant='contained'\r\n                            onClick={() => {\r\n                              toastMessage('Order created successfully');\r\n                              navigate('/order/orders');\r\n                            }}\r\n                          >\r\n                            Close\r\n                          </Button>\r\n                        )}\r\n                      <Button\r\n                        w='7rem'\r\n                        variant='contained'\r\n                        data-mssg='close'\r\n                        disabled={\r\n                          activeStep === steps.length - 1 &&\r\n                          !isEmpty(totalRequiredData) &&\r\n                          some(totalRequiredData, (obj) =>\r\n                            some(obj, (value) => value === '')\r\n                          )\r\n                        }\r\n                        onClick={(e) => {\r\n                          if (activeStep === 0) {\r\n                            handleSetValidaton();\r\n                            submitNow(e, 'Save&Close');\r\n                          } else {\r\n                            submitInfo();\r\n                          }\r\n                        }}\r\n                      >\r\n                        {activeStep === 0 ? 'Save & Close' : 'Submit Order'}\r\n                      </Button>\r\n                    </>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"],"names":["AckInfo","_ref","orderId","totalRequiredData","formData","checks","setChecks","useState","useEffect","isEmpty","updatedData","map","item","isComplete","every","value","complete","orderDetail","get","Email","DOB","_jsxs","Grid","container","spacing","sx","margin","paddingBottom","borderCollapse","children","_jsx","Typography","width","display","justifyContent","textDecoration","fontWeight","fontSize","pb","xs","sm","md","lg","borderRight","padding","borderBottom","Object","entries","_ref2","index","label","_Fragment","variant","Box","flexDirection","alignItems","gap","style","marginLeft","client_name","checks_package","TableContainer","pt","Table","className","TableBody","_checks","_checks2","Fragment","TableRow","border","borderLeft","TableCell","p","check_name","color","length","BillingInfo","handleBillChange","formBillData","setFormBillData","clientDetail","setClientDetail","loading","setLoading","billingIdentifiers","terms","JSON","parse","key","values","async","_response$data","response","RequestsApi","client_id","data","e","console","error","getClient","w","textAlign","CircularProgress","size","paddingX","BiErrorCircle","React","mb","FormControl","fullWidth","Select","onChange","handleSelectChange","target","prevData","placeholder","MenuItem","RequesterInfo","handleReqChange","formReqData","setFormReqData","localStorage","getItem","borderTop","TextField","shadow","requesterName","_e$target","handleSentenceChange","phone","email","CreateOrders","_userDetail$clientInf","_userDetail$clientInf2","_userDetail$clientInf3","_userDetail$clientInf4","navigate","useNavigate","id","useParams","setData","setError","undefined","activeStep","setActiveStep","setOrderId","orderInfoId","setOrderInfoId","orderChecksId","setOrderChecksId","dynFormData","setDynFormData","checksData","setChecksData","subRowList","setSubRowList","requiredData","setRequiredData","setTotalRequiredData","userDetail","combineArraysSafely","terms1","terms2","array1","array2","unionBy","combinedArray","clientInfo","filter","term_component","intialsteps","steps","setSteps","errorMessage","setErrorMessage","first_name","last_name","dob","uid","isCheckboxChecked","setFormData","father_name","middle_name","alias_name","alter_phone","date_created","moment","format","status","support","created_by_id","created_by_name","currency","country","client_project","numberedSteps","setNumberedSteps","formSubjData","setformSubjData","gender","address1","address2","city","state","nationality","zipcode","addressDetail","setAddressDetail","Country","State","City","Address","includes","clientRoles","role","formAckData","setFormAckData","ackby","acknowledged","InputStyle","marginTop","squareIconStyle","borderRadius","height","paddingTop","user","useAuth","token","nextStep","prevActiveStep","toastMessage","then","json","_find","_orderInformationId$","_orderInformationId$2","rows","d","subRows","orderInformationId","find","i","order_info","infoData","info_data","flatMap","cleanedString","replace","jsonObject","iniitalStespName","check","indexToInsertAfter","splice","check_alias","order_checks_id","counts","newNumberedSteps","step","_find2","shortName","concat","submitNow","event","button","preventDefault","isChecked","some","isAdded","checksArray","sortBy","indexOf","cData","obj","package_included","package_name","success","_response$data2","_event$target","_response$data6","checkDetail","cinfo","omit","pinfo","msg","_response$data3","_response$data4","_response$data5","orderchecksId","dataset","err","submitInfo","prev","findIndex","_event$target2","order_id","newdata","AutoGenInfo","renderSwitch","isEqual","checksId","check_config","join","orderData","table_name","field_to_update","new_value","table_id","column_to_match","date_enabled","res","response1","handleSetValidaton","lineHeight","top","Card","CardContent","overflowX","maxWidth","xl","Stepper","alternativeLabel","Step","StepLabel","icon","cursor","backgroundColor","onClick","FormPackage","handleChange","input","handleQtyChange","updatedChecksList","qty","parseInt","sourceArray","newSteps","forEach","itemIndex","occurrences","excessItemsToRemove","excessItemIndex","lastIndexOf","Array","from","push","handleChecksChange","checked","checkname","ns","sortedData","slice","isCandidateOrder","AutoGenFormInfo","stepname","handleEduChange","Button","disabled","marginRight"],"sourceRoot":""}
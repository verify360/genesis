{"version":3,"file":"static/js/657.45e2e043.chunk.js","mappings":"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","sources":["views/Orders/OrderCheckBoxList.js","views/Orders/OrderDetails.js"],"sourcesContent":["import { Button, Checkbox, CircularProgress, Grid } from '@mui/material';\nimport RequestsApi from 'api/requests';\nimport { concat, isEmpty, last, map } from 'lodash';\nimport { useEffect, useState } from 'react';\n\nconst OrderCheckBoxList = (props) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const addNumber = (check_name, check_alias) => {\n    const counts = {};\n    concat(map(props?.orderDetail?.subRows, 'check'), check_name)?.map(\n      (step) => {\n        if (!counts[step]) {\n          counts[step] = 0;\n        }\n        counts[step]++;\n        return `${check_alias}-${counts[step]}`;\n      }\n    );\n    return `${check_alias ? check_alias : check_name}-${counts[check_name]}`;\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    RequestsApi.ListChecksByClientPackage(\n      props?.orderDetail?.client_id,\n      props?.orderDetail?.checks_package\n    )\n      .then((response) => {\n        let resp = JSON.parse(response.data.data);\n        const updatedChecksValues = resp.map((item) => ({\n          category: item.category,\n          check_name: item.check_name,\n          check_alias: item?.check_alias,\n          isAdded: false,\n          qty: 0,\n        }));\n\n        setData(updatedChecksValues);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      })\n      .finally(() => setLoading(false));\n  }, [props?.orderDetail]);\n\n  const handleCheckboxChange = (check_name, check_alias) => {\n    const isAlreadySelected = props?.selectedChecks?.some(\n      (item) => item.check_name === check_name\n    );\n\n    let updatedSelectedChecks;\n    if (isAlreadySelected) {\n      updatedSelectedChecks = props?.selectedChecks.filter(\n        (item) => item.check_name !== check_name\n      );\n    } else {\n      updatedSelectedChecks = [\n        ...props?.selectedChecks,\n        {\n          order_id: props?.orderDetail?.order_id,\n          check_name: check_name,\n          package_included: true,\n          client_id: props?.orderDetail?.client_id,\n          client_name: props?.orderDetail?.client_name,\n          check_alias: addNumber(check_name, check_alias),\n        },\n      ];\n    }\n    props?.setSelectedChecks(updatedSelectedChecks);\n  };\n\n  return (\n    <>\n      {loading ? (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <CircularProgress color='inherit' size={20} />\n        </div>\n      ) : (\n        <>\n          {map(data, (checkDetail, index) => {\n            return (\n              <div key={index}>\n                <Checkbox\n                  name='category'\n                  value={checkDetail.check_name}\n                  checked={\n                    !isEmpty(props?.selectedChecks)\n                      ? props?.selectedChecks?.some(\n                          (item) => item?.check_name === checkDetail?.check_name\n                        )\n                      : false\n                  }\n                  onChange={() =>\n                    handleCheckboxChange(checkDetail?.check_name, '')\n                  }\n                  variant='outlined'\n                />\n                <span>{checkDetail?.check_name}</span>\n              </div>\n            );\n          })}\n          <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'end' }}>\n            <Button\n              variant='contained'\n              color='primary'\n              sx={{ marginRight: '0.7rem' }}\n              onClick={props?.handleClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              disabled={isEmpty(props?.selectedChecks)}\n              type='submit'\n              onClick={props?.handleNextClick}\n            >\n              Add\n            </Button>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default OrderCheckBoxList;\n","import AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport { LuMinusSquare, LuPlusSquare } from 'react-icons/lu';\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Unstable_Grid2 as Grid,\r\n  MenuItem,\r\n  Modal,\r\n  Paper,\r\n  Select,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport RequestsApi from 'api/requests';\r\nimport {\r\n  filter,\r\n  find,\r\n  includes,\r\n  isEmpty,\r\n  isObject,\r\n  map,\r\n  negate,\r\n  size,\r\n  uniqBy,\r\n} from 'lodash';\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactLinkify from 'react-linkify';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Roles,\r\n  checkStatus,\r\n  clientRoles,\r\n  deposition,\r\n  toastMessage,\r\n} from 'views/Utils/Common';\r\nimport OrderCheckBoxList from './OrderCheckBoxList';\r\nimport { DownloadButton } from './pdfGenerator/DownloadPDF';\r\nimport { CancellationPopup } from '../MasterData/University/CancellationPopup';\r\nimport { FaEdit, FaRegEdit } from 'react-icons/fa';\r\n\r\n// Assets\r\nexport default function OrderDetails() {\r\n  const [order, setOrder] = useState([]);\r\n  const [subRowList, setSubRowList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openCheckBoxModal, setOPenCheckBoxModal] = useState(false);\r\n  const [selectedChecks, setSelectedChecks] = useState([]);\r\n  const [cancelOrder, setCancelOrder] = useState({\r\n    showModal: false,\r\n    checksId: [],\r\n  });\r\n  const userDetail = localStorage.getItem('user');\r\n  const role = localStorage?.getItem('role');\r\n  let navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpand = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  let token =\r\n    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImhpbmFAc3RvcmUuY29tIiwiZXhwIjoxNjk1MTM2MzE0fQ.OexNPaFplvQdlZ1sydHYjUm1tujDtVWmC7048ue4b9M';\r\n\r\n  const InputStyle = {\r\n    fontsize: '0.75rem',\r\n    padding: '8px 12px',\r\n  };\r\n\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    // padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme?.palette?.background?.paper,\r\n    borderRadius: '0.5rem',\r\n  }));\r\n\r\n  const getOrderDetail = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let response = await RequestsApi.OrderDetails({\r\n        token: token,\r\n        id: id,\r\n      });\r\n\r\n      let json = await response;\r\n      let data = JSON.parse(json['data']['data'])['rowsData'];\r\n      setOrder(data[0]);\r\n      data.forEach((d) => {\r\n        d['subRows'].forEach((s) => {\r\n          setSubRowList((oldArray) =>\r\n            uniqBy([...oldArray, s], 'order_checks_id')\r\n          );\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching checks:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getOrderDetail();\r\n    }\r\n  }, []);\r\n\r\n  const handleDownload = () => {\r\n    const pdfUrl = process.env.PUBLIC_URL + '/special-notice.pdf';\r\n    const link = document.createElement('a');\r\n    link.href = pdfUrl;\r\n    link.download = 'report.pdf';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOPenCheckBoxModal(false);\r\n    setSelectedChecks('');\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    try {\r\n      let response = RequestsApi.AddOrderchecks(selectedChecks);\r\n      response?.then((res) => {\r\n        if (res?.status === 200) {\r\n          const res1 = RequestsApi.updateOrder(\r\n            {\r\n              status: 'DRAFT',\r\n            },\r\n            id\r\n          );\r\n          res1\r\n            ?.then((response) => {\r\n              if (response?.status === 200) {\r\n                toastMessage('Check added successfully');\r\n                handleClose();\r\n                getOrderDetail();\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.error('Error updating record:', error);\r\n            });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching checks:', error);\r\n    }\r\n  };\r\n\r\n  const handleChangeDeposition = (id) => (event) => {\r\n    let data = {\r\n      table_name: 'orders',\r\n      field_to_update: 'score',\r\n      new_value: event.target.value,\r\n      table_id: id,\r\n    };\r\n\r\n    try {\r\n      let response = RequestsApi.UpdateData(data);\r\n      response?.then((res) => {\r\n        if (res?.status === 200) {\r\n          getOrderDetail();\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching checks:', error);\r\n    }\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setCancelOrder({\r\n      showModal: false,\r\n      checksId: [],\r\n    });\r\n  };\r\n\r\n  // const changeStatus = (status, checksId) => {\r\n  //   let data = {\r\n  //     table_name: 'orders',\r\n  //     field_to_update: 'status',\r\n  //     new_value: status,\r\n  //     table_id: id,\r\n  //   };\r\n  //   let checkData = {\r\n  //     table_name: 'order_checks',\r\n  //     field_to_update: 'check_status',\r\n  //     new_value: 'ARCHIVED',\r\n  //     table_id: checksId,\r\n  //     column_to_match: 'id',\r\n  //   };\r\n  //   try {\r\n  //     let response = RequestsApi.UpdateData(data);\r\n  //     response?.then((res) => {\r\n  //       if (res.status === 200) {\r\n  //         const response1 = RequestsApi.UpdateMultipleAssignee(checkData);\r\n  //         response1?.then((res) => {\r\n  //           if (res.status === 200) {\r\n  //             const orderStatus = status === 'ARCHIVED' ? 'Archived' : 'Closed';\r\n  //             toastMessage(`${orderStatus} order successfully`);\r\n  //             navigate('/order/orders');\r\n  //           }\r\n  //         });\r\n  //       }\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching checks:', error);\r\n  //   }\r\n  // };\r\n\r\n  const cancellOrder = (orderData) => {\r\n    let checkData = {\r\n      table_name: 'order_checks',\r\n      field_to_update: 'check_status',\r\n      new_value: 'CANCELLED',\r\n      table_id: cancelOrder?.checksId,\r\n      column_to_match: 'id',\r\n    };\r\n\r\n    let response = RequestsApi.updateOrder(orderData, id);\r\n    if (orderData?.status === 'CANCELLED') {\r\n      response?.then((res) => {\r\n        if (res?.status === 200) {\r\n          RequestsApi.UpdateMultipleAssignee(checkData)?.then((res) => {\r\n            if (res?.status === 200) {\r\n              RequestsApi.UpdateMultipleAssignee({\r\n                ...checkData,\r\n                field_to_update: 'check_cancel_reason',\r\n                new_value: orderData?.order_cancel_reason,\r\n              }).then((res) => {\r\n                if (res?.status === 200) {\r\n                  toastMessage(\r\n                    role === Roles?.ADMIN\r\n                      ? 'Approval for cancel order send succesfully'\r\n                      : 'Order cancelled succesfully'\r\n                  );\r\n                  handleDialogClose();\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      response?.then((res) => {\r\n        if (res?.status === 200) {\r\n          toastMessage(\r\n            role === Roles?.ADMIN\r\n              ? 'Approval for cancel order send succesfully'\r\n              : 'Order cancelled succesfully'\r\n          );\r\n          handleDialogClose();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const evenItems = subRowList.filter((_, i) => i % 2 === 0);\r\n  const oddItems = subRowList.filter((_, i) => i % 2 !== 0);\r\n  const shouldAddSpecialNoticeToOdd = oddItems.length < evenItems.length;\r\n\r\n  return (\r\n    <Stack\r\n      spacing={1}\r\n      divider={<Divider orientation='vertical' flexItem />}\r\n      style={{ ...InputStyle }}\r\n    >\r\n      <Grid xs={6} md={12} sx={{ borderRadius: '0.5rem' }}>\r\n        <span\r\n          style={{\r\n            fontWeight: 600,\r\n            // textDecoration: 'underline',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            fontSize: '1.1rem',\r\n            textTransform: 'uppercase',\r\n          }}\r\n        >\r\n          Order Details\r\n        </span>\r\n      </Grid>\r\n      {loading ? (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <CircularProgress color='inherit' size={20} />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              width: '100%',\r\n              mx: 2.5,\r\n              pl: '1rem',\r\n            }}\r\n          >\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: 15 }}>\r\n                <Typography\r\n                  sx={{ fontSize: '1.3rem !important', fontWeight: 450 }}\r\n                >\r\n                  {`${order?.first_name} ${order?.last_name}`}\r\n                </Typography>\r\n\r\n                <li style={{ color: 'grey', fontSize: '0.875rem' }}>\r\n                  <span style={{ color: 'black' }}>{order?.client_name}</span>\r\n                </li>\r\n                <span>\r\n                  <li style={{ color: 'grey', fontSize: '0.875rem' }}>\r\n                    <span style={{ color: 'black' }}>\r\n                      {order?.checks_package}\r\n                    </span>\r\n                  </li>\r\n                </span>\r\n              </div>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: '0.875rem !important',\r\n                  display: 'flex',\r\n                  gap: 2,\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    border: '1px solid grey',\r\n                    borderRadius: '0.3rem',\r\n                    padding: '0px 7px',\r\n                    color: find(checkStatus, {\r\n                      label: order?.status,\r\n                    })?.color,\r\n                    borderColor: find(checkStatus, {\r\n                      label: order?.status,\r\n                    })?.color,\r\n                  }}\r\n                >\r\n                  {order?.status}\r\n                </span>\r\n                <span>\r\n                  <li style={{ color: 'grey' }}>\r\n                    <span style={{ color: 'black' }}>\r\n                      Order Created By - {order?.assignee}\r\n                    </span>\r\n                  </li>\r\n                </span>\r\n                <span>\r\n                  <li style={{ color: 'grey' }}>\r\n                    <span style={{ color: 'black' }}>\r\n                      Order - {order?.order_id}\r\n                    </span>\r\n                  </li>\r\n                </span>\r\n                <span>\r\n                  <li style={{ color: 'grey' }}>\r\n                    <span style={{ color: 'black' }}>\r\n                      {moment(order?.date)?.format('DD-MM-YYYY')}\r\n                    </span>\r\n                  </li>\r\n                </span>\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'flex-end',\r\n                  width: '100%',\r\n                  gap: 4,\r\n                  paddingRight: 11,\r\n                }}\r\n              >\r\n                {/* Conditional Select Deposition */}\r\n                {/* {order?.status === 'CLOSED' && (\r\n                  <Select\r\n                    id='score'\r\n                    name='score'\r\n                    value={order?.score}\r\n                    onChange={handleChangeDeposition(id)}\r\n                    disabled={includes(clientRoles, role)}\r\n                    sx={{\r\n                      marginTop: '0.5rem',\r\n                      borderRadius: '20px',\r\n                      backgroundColor: '#FFF',\r\n                      '& .MuiOutlinedInput-root': {\r\n                        borderRadius: '20px',\r\n\r\n                        '&:hover': { borderColor: '#bf1e2e' },\r\n                      },\r\n                      '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: '#e37d86',\r\n                      },\r\n                      '& .MuiSelect-select': {\r\n                        padding: '7.5px 14px',\r\n                        color: find(deposition, { label: order?.score })?.color,\r\n                        textAlign: 'center', // Center align selected value\r\n                      },\r\n                    }}\r\n                  >\r\n                    {deposition.map((sts, index) => (\r\n                      <MenuItem\r\n                        value={sts?.label}\r\n                        key={index}\r\n                        sx={{ color: sts?.color }}\r\n                      >\r\n                        {sts.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                )} */}\r\n                {/* Edit/Fill Forms Button */}\r\n\r\n                {order?.status !== 'CLOSED' && (\r\n                  <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    sx={{\r\n                      color: '#FFF',\r\n                      textTransform: 'none',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                    }}\r\n                    onClick={() => navigate(`/order/createorders/${id}`)}\r\n                  >\r\n                    Fill/Edit Forms\r\n                  </Button>\r\n                )}\r\n\r\n                {/* Add Check/Component Button */}\r\n                {order?.status !== 'CLOSED' && (\r\n                  <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    sx={{\r\n                      color: '#FFF',\r\n                      textTransform: 'none',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                    }}\r\n                    onClick={() => setOPenCheckBoxModal(true)}\r\n                  >\r\n                    {`Add ${\r\n                      includes(clientRoles, role) ? 'Component' : 'Check'\r\n                    }`}\r\n                  </Button>\r\n                )}\r\n\r\n                {order?.status === 'CLOSED' && (\r\n                  <Select\r\n                    value={order?.score || 0}\r\n                    onChange={handleChangeDeposition(id)}\r\n                    disabled={includes(clientRoles, role)}\r\n                    sx={{\r\n                      minWidth: 120,\r\n                      backgroundColor: 'primary',\r\n                      p: '3.5px 15px',\r\n                      '& .MuiOutlinedInput-input': {\r\n                        p: '8.5px 14px !important',\r\n                        color: '#FFF',\r\n                      },\r\n                      '& .MuiSelect-icon': {\r\n                        color: '#FFF',\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MenuItem value={0} disabled>\r\n                      Select Desposition\r\n                    </MenuItem>\r\n                    {deposition?.map((sts, i) => (\r\n                      <MenuItem\r\n                        value={sts?.label}\r\n                        key={i}\r\n                        sx={{ color: sts?.color }}\r\n                      >\r\n                        {sts?.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                  // <Select\r\n                  //   id='score'\r\n                  //   name='score'\r\n                  //   value={order?.score}\r\n                  //   onChange={handleChangeDeposition(id)}\r\n                  //   disabled={includes(clientRoles, role)}\r\n                  //   sx={{\r\n                  //     marginTop: '0.5rem',\r\n                  //     borderRadius: '20px',\r\n                  //     backgroundColor: '#FFF',\r\n                  //     width: '50%',\r\n                  //     '& .MuiOutlinedInput-root': {\r\n                  //       borderRadius: '20px',\r\n\r\n                  //       '&:hover': { borderColor: '#bf1e2e' },\r\n                  //     },\r\n                  //     '& .MuiOutlinedInput-notchedOutline': {\r\n                  //       borderColor: '#e37d86',\r\n                  //     },\r\n                  //     '& .MuiSelect-select': {\r\n                  //       padding: '7.5px 14px',\r\n                  //       color: find(deposition, { label: order?.score })?.color,\r\n                  //       textAlign: 'center', // Center align selected value\r\n                  //     },\r\n                  //   }}\r\n                  // >\r\n                  //   {deposition.map((sts, index) => (\r\n                  //     <MenuItem\r\n                  //       value={sts?.label}\r\n                  //       key={index}\r\n                  //       sx={{ color: sts?.color }}\r\n                  //     >\r\n                  //       {sts.label}\r\n                  //     </MenuItem>\r\n                  //   ))}\r\n                  // </Select>\r\n                )}\r\n\r\n                {order?.status === 'CLOSED' && (\r\n                  // <Button\r\n                  //   variant='contained'\r\n                  //   color='primary'\r\n                  //   sx={{\r\n                  //     color: '#FFF',\r\n                  //     textTransform: 'none',\r\n                  //     borderRadius: '5px',\r\n                  //     backgroundColor: '#bf1e2e',\r\n                  //     border: 'none',\r\n                  //   }}\r\n                  //   onClick={() => {\r\n                  //     window.open(\r\n                  //       `/downloadPdf/${id}?token=${\r\n                  //         JSON?.parse(userDetail)?.token\r\n                  //       }`,\r\n                  //       '_blank'\r\n                  //     );\r\n                  //   }}\r\n                  // >\r\n                  //   Download PDF\r\n                  // </Button>\r\n                  <DownloadButton\r\n                    orderDetail={order}\r\n                    fileName={`Order_${id}.pdf`}\r\n                    id={id}\r\n                  />\r\n                )}\r\n                {/* Conditional Cancel Order Button */}\r\n                {role !== Roles?.VENDOR && role !== Roles?.STAFF && (\r\n                  <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    sx={{\r\n                      color: '#FFF',\r\n                      textTransform: 'none',\r\n                      borderRadius: '5px',\r\n                      border: 'none',\r\n                    }}\r\n                    onClick={() =>\r\n                      setCancelOrder({\r\n                        showModal: true,\r\n                        checksId: map(subRowList, 'order_checks_id'),\r\n                      })\r\n                    }\r\n                  >\r\n                    Cancel Order\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </Box>\r\n          </Box>\r\n          <Grid container spacing={2}>\r\n            {subRowList?.map((x, i) => (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                md={4}\r\n                key={i}\r\n                sx={{ display: 'flex', flexDirection: 'column', gap: 0.8 }}\r\n              >\r\n                {generateAccordionContent(\r\n                  x,\r\n                  i,\r\n                  handleExpand,\r\n                  expanded,\r\n                  checkStatus,\r\n                  order,\r\n                  role,\r\n                  navigate,\r\n                  Item,\r\n                  setExpanded\r\n                )}\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <div\r\n                style={{\r\n                  fontSize: '0.9rem',\r\n                  marginBottom: 10,\r\n                  fontWeight: 600,\r\n                  paddingLeft: 6,\r\n                }}\r\n              >\r\n                Special Notice\r\n              </div>\r\n              <SpecialNoticeAccordion\r\n                handleExpand={handleExpand}\r\n                expanded={expanded}\r\n                handleDownload={handleDownload}\r\n                subRowList={subRowList}\r\n                Item={Item}\r\n                setExpanded={setExpanded}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n      <Modal\r\n        open={openCheckBoxModal}\r\n        onClose={handleClose}\r\n        aria-labelledby='modal-modal-title'\r\n        aria-describedby='modal-modal-description'\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 700,\r\n            maxHeight: '80vh', // Adjust this value as needed\r\n            bgcolor: 'background.paper',\r\n            border: '2px solid #000',\r\n            boxShadow: 24,\r\n            p: 4,\r\n            overflowY: 'auto', // Enable vertical scrolling within the modal if needed\r\n            '& label': {\r\n              lineHeight: '2em !important',\r\n            },\r\n          }}\r\n        >\r\n          <OrderCheckBoxList\r\n            selectedChecks={selectedChecks || []}\r\n            setSelectedChecks={setSelectedChecks}\r\n            handleClose={handleClose}\r\n            handleNextClick={handleNextClick}\r\n            orderDetail={order}\r\n            setOPenCheckBoxModal={setOPenCheckBoxModal}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      {cancelOrder?.showModal && (\r\n        <CancellationPopup\r\n          open={cancelOrder?.showModal}\r\n          handleDialogClose={handleDialogClose}\r\n          handleSubmit={cancellOrder}\r\n          object={{\r\n            ...order,\r\n            order_cancel_reason: order?.order_cancel_reason\r\n              ? JSON.parse(order?.order_cancel_reason)\r\n              : '',\r\n          }}\r\n          cancel='order'\r\n        />\r\n        // <ConfirmationDialog\r\n        //   open={cancelOrder?.showModal}\r\n        //   handleDialogClose={handleDialogClose}\r\n        //   handleChangeAssignee={() =>\r\n        //     changeStatus(cancelOrder?.status, cancelOrder?.checksId)\r\n        //   }\r\n        // />\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n\r\nconst generateAccordionContent = (\r\n  x,\r\n  i,\r\n  handleExpand,\r\n  expanded,\r\n  checkStatus,\r\n  order,\r\n  role,\r\n  navigate,\r\n  Item,\r\n  setExpanded\r\n) => {\r\n  const cleanedString = x?.checksformdata?.replace(/\\\\/g, '');\r\n  const jsonObject = cleanedString ? JSON?.parse(cleanedString) : {};\r\n  const entries = Object.entries(jsonObject?.AutoGenInfo || {});\r\n\r\n  return (\r\n    <Item key={i}>\r\n      <Accordion\r\n        onChange={handleExpand(i)}\r\n        expanded={expanded === i}\r\n        sx={{\r\n          '& .MuiAccordionSummary-content.Mui-expanded': {\r\n            minHeight: '47px !important',\r\n          },\r\n        }}\r\n      >\r\n        <AccordionSummary\r\n          sx={{\r\n            background: '#8e8f91',\r\n            borderRadius: '0.5rem',\r\n            mx: 0,\r\n            minHeight: '50px !important',\r\n            '& .MuiAccordionSummary-content.Mui-expanded': {\r\n              margin: '0 !important',\r\n            },\r\n          }}\r\n          expandIcon={\r\n            expanded === i ? (\r\n              <LuMinusSquare\r\n                onClick={() => setExpanded(false)}\r\n                alt=''\r\n                size={18}\r\n                color='#fff'\r\n                style={{ marginLeft: '0.2rem', marginBottom: '0.1rem' }}\r\n              />\r\n            ) : (\r\n              <LuPlusSquare\r\n                onClick={() => setExpanded(true)}\r\n                alt=''\r\n                size={18}\r\n                color='#fff'\r\n                style={{ marginLeft: '0.2rem', marginBottom: '0.1rem' }}\r\n              />\r\n            )\r\n          }\r\n          aria-controls='panel1a-content'\r\n          id='panel1a-header'\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              width: '100%',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div style={{ display: 'flex', gap: 12 }}>\r\n              <span\r\n                style={{ color: '#fff', fontWeight: 500, fontSize: '0.875rem' }}\r\n              >\r\n                {x?.check_alias || x?.check}\r\n              </span>\r\n              <Button\r\n                style={{\r\n                  background:\r\n                    find(checkStatus, {\r\n                      label: x?.status,\r\n                    })?.color || '#2152A1',\r\n                  color: '#fff',\r\n                  padding: '0px 8px 0px 8px',\r\n                }}\r\n              >\r\n                {x.status}\r\n              </Button>\r\n            </div>\r\n            {order?.date_enabled &&\r\n              role !== Roles?.STAFF &&\r\n              role !== Roles?.VENDOR && (\r\n                <span\r\n                  onClick={() =>\r\n                    navigate(`/orderchecks/checkDetails/${x?.order_checks_id}`)\r\n                  }\r\n                >\r\n                  <FaEdit\r\n                    size={18}\r\n                    color='#fff'\r\n                    style={{ marginTop: '0.2rem' }}\r\n                  />\r\n                </span>\r\n              )}\r\n          </Box>\r\n        </AccordionSummary>\r\n        <AccordionDetails sx={{ p: 0 }}>\r\n          {!isEmpty(jsonObject?.AutoGenInfo) ? (\r\n            <Table width='100%' border='0' sx={{ mt: '3px' }}>\r\n              <TableBody>\r\n                <TableRow sx={{ borderBottom: 'none' }}>\r\n                  <TableCell sx={{ borderBottom: 'none', p: 0 }}>\r\n                    <Table>\r\n                      <TableBody>\r\n                        {entries?.map(([label, value], index) => (\r\n                          <TableRow key={label} sx={{ borderBottom: 'none' }}>\r\n                            <TableCell\r\n                              component='th'\r\n                              scope='row'\r\n                              sx={{\r\n                                p: '10px',\r\n                                width: '30%',\r\n                                verticalAlign: 'middle',\r\n                                borderBottom: 'none',\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                variant='subtitle1'\r\n                                sx={{ fontWeight: 500 }}\r\n                              >\r\n                                {`${label}:`}\r\n                              </Typography>\r\n                            </TableCell>\r\n                            <TableCell\r\n                              sx={{\r\n                                p: '10px',\r\n                                verticalAlign: 'middle',\r\n                                borderBottom: 'none',\r\n                              }}\r\n                            >\r\n                              {value ? (\r\n                                !isObject(value) ? (\r\n                                  <ReactLinkify\r\n                                    componentDecorator={(\r\n                                      decoratedHref,\r\n                                      decoratedText,\r\n                                      key\r\n                                    ) => (\r\n                                      <a\r\n                                        href={decoratedHref}\r\n                                        key={key}\r\n                                        target='_blank'\r\n                                        rel='noopener noreferrer'\r\n                                        style={{\r\n                                          wordBreak: 'break-all',\r\n                                          whiteSpace: 'pre-wrap', \r\n                                          display: 'inline-block', \r\n                                          maxWidth: '100%', \r\n                                        }}\r\n                                      >\r\n                                        {decoratedText}\r\n                                      </a>\r\n                                    )}\r\n                                  >\r\n                                    {value}\r\n                                  </ReactLinkify>\r\n                                ) : (\r\n                                  'NA'\r\n                                )\r\n                              ) : (\r\n                                '-'\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              No data found\r\n            </div>\r\n          )}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Item>\r\n  );\r\n};\r\n\r\nconst SpecialNoticeAccordion = ({\r\n  handleExpand,\r\n  expanded,\r\n  handleDownload,\r\n  subRowList,\r\n  Item,\r\n  setExpanded,\r\n}) => (\r\n  <Item key='report'>\r\n    <Accordion\r\n      onChange={handleExpand(size(subRowList) + 1)}\r\n      expanded={expanded === size(subRowList) + 1}\r\n    >\r\n      <AccordionSummary\r\n        sx={{\r\n          background: '#8e8f91',\r\n          borderRadius: '0.5rem',\r\n          mx: 0,\r\n          minHeight: '50px !important',\r\n          '& .MuiAccordionSummary-content.Mui-expanded': {\r\n            margin: '0 !important',\r\n          },\r\n        }}\r\n        expandIcon={\r\n          expanded === size(subRowList) + 1 ? (\r\n            <LuMinusSquare\r\n              onClick={() => setExpanded(false)}\r\n              alt=''\r\n              size={18}\r\n              color='#fff'\r\n              style={{ marginLeft: '0.2rem', marginBottom: '0.1rem' }}\r\n            />\r\n          ) : (\r\n            <LuPlusSquare\r\n              onClick={() => setExpanded(true)}\r\n              alt=''\r\n              size={18}\r\n              color='#fff'\r\n              style={{ marginLeft: '0.2rem', marginBottom: '0.1rem' }}\r\n            />\r\n          )\r\n        }\r\n        aria-controls='panel1a-content'\r\n        id='panel1a-header'\r\n      >\r\n        <span style={{ color: '#fff', fontWeight: 500, fontSize: '0.875rem' }}>\r\n          Special Notice\r\n        </span>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography\r\n          sx={{ display: 'flex', justifyContent: 'center', paddingTop: '1rem' }}\r\n        >\r\n          ** NOTICE **\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            paddingTop: '1.5rem',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: 40,\r\n          }}\r\n        >\r\n          <span>\r\n            The information provided is a consumer report as defined in the\r\n            federal Fair Credit Reporting Act [15 U.S.C. 1681-1681u]. It\r\n            contains confidential information on the individual named. It is\r\n            submitted to the conditions contained in your Subscriber Agreement\r\n            with us and may be used solely as a factor in evaluating the named\r\n            individual for property renting/leasing, employment, promotion,\r\n            reassignment or retention as an employee. We maintain strict\r\n            procedures designed to ensure that the information is complete and\r\n            up to date. While the information furnished is from reliable\r\n            sources, its accuracy is not guaranteed. Proper use of this report\r\n            and final verification of the named individual's identity is your\r\n            sole responsibility. If any adverse action is taken based in whole\r\n            or in part on this consumer report, a copy of this report and a\r\n            summary of the consumer's rights must be provided to the consumer\r\n            prior to taking adverse action.\r\n          </span>\r\n          <span>\r\n            <span\r\n              onClick={handleDownload}\r\n              style={{\r\n                color: '#698FB5',\r\n                background: '#fff',\r\n                border: 'none!important',\r\n                fontWeight: 500,\r\n                fontSize: '0.875rem',\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              A Summary of Your Rights Under the Fair Credit Reporting Act\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  </Item>\r\n);\r\n"],"names":["props","data","setData","useState","loading","setLoading","addNumber","check_name","check_alias","_concat","_props$orderDetail","counts","concat","map","orderDetail","subRows","step","useEffect","_props$orderDetail2","_props$orderDetail3","RequestsApi","client_id","checks_package","then","response","updatedChecksValues","JSON","parse","item","category","isAdded","qty","catch","error","console","finally","_jsx","_Fragment","children","style","display","justifyContent","CircularProgress","color","size","_jsxs","checkDetail","index","_props$selectedChecks2","Checkbox","name","value","checked","isEmpty","selectedChecks","some","onChange","handleCheckboxChange","_props$selectedChecks","updatedSelectedChecks","_props$orderDetail4","_props$orderDetail5","_props$orderDetail6","filter","order_id","package_included","client_name","setSelectedChecks","variant","Grid","xs","sx","Button","marginRight","onClick","handleClose","disabled","type","handleNextClick","OrderDetails","_localStorage","_find","_find2","_moment","order","setOrder","subRowList","setSubRowList","openCheckBoxModal","setOPenCheckBoxModal","cancelOrder","setCancelOrder","showModal","checksId","role","localStorage","getItem","navigate","useNavigate","id","useParams","expanded","setExpanded","React","handleExpand","panel","event","isExpanded","Item","styled","Paper","_ref","_theme$palette","_theme$palette$backgr","theme","backgroundColor","palette","mode","typography","body2","textAlign","background","paper","borderRadius","getOrderDetail","async","token","json","forEach","d","s","oldArray","uniqBy","handleDialogClose","evenItems","_","i","length","Stack","spacing","divider","Divider","orientation","flexItem","fontsize","padding","md","fontWeight","fontSize","textTransform","Box","width","mx","pl","flexDirection","gap","alignItems","Typography","first_name","last_name","border","find","checkStatus","label","status","borderColor","assignee","moment","date","format","paddingRight","includes","clientRoles","Select","score","table_name","field_to_update","new_value","target","table_id","res","handleChangeDeposition","minWidth","p","MenuItem","deposition","sts","DownloadButton","fileName","Roles","container","x","sm","generateAccordionContent","marginBottom","paddingLeft","SpecialNoticeAccordion","handleDownload","link","document","createElement","href","download","body","appendChild","click","removeChild","Modal","open","onClose","position","top","left","transform","maxHeight","bgcolor","boxShadow","overflowY","lineHeight","OrderCheckBoxList","res1","toastMessage","CancellationPopup","handleSubmit","orderData","checkData","column_to_match","_RequestsApi$UpdateMu","order_cancel_reason","object","cancel","_x$checksformdata","_find3","cleanedString","checksformdata","replace","jsonObject","entries","Object","AutoGenInfo","Accordion","minHeight","AccordionSummary","margin","expandIcon","LuMinusSquare","alt","marginLeft","LuPlusSquare","check","date_enabled","order_checks_id","FaEdit","marginTop","AccordionDetails","Table","mt","TableBody","TableRow","borderBottom","TableCell","_ref2","component","scope","verticalAlign","isObject","ReactLinkify","componentDecorator","decoratedHref","decoratedText","key","rel","wordBreak","whiteSpace","maxWidth","_ref3","paddingTop","cursor"],"sourceRoot":""}
{"version":3,"file":"static/js/938.039481ac.chunk.js","mappings":"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","sources":["views/Orders/components/ConfirmationDialog.js","views/Orders/OrderChecksList.js","views/checks/CheckTabs.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\n\nconst ConfirmationDialog = ({ open, handleDailogClose, handleChangeAssignee }) => {\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleDailogClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n        sx={{ '& .MuiDialog-paper': { width: '500px', height: 'auto' } }}\n      >\n        <DialogTitle id='alert-dialog-title'><h2>Confirmation</h2></DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description' sx={{fontSize:'0.85rem!important'}}>\n          Are you sure you want to proceed?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions sx={{pr:4, pb:3}}>\n          <Button onClick={handleDailogClose} color='primary'  variant='contained'>\n            Cancel\n          </Button>\n          <Button onClick={handleChangeAssignee} color='primary' autoFocus  variant='contained'>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ConfirmationDialog;\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport RequestsApi from 'api/requests';\r\nimport {\r\n  chain,\r\n  compact,\r\n  concat,\r\n  every,\r\n  filter,\r\n  find,\r\n  includes,\r\n  isArray,\r\n  isEmpty,\r\n  isObject,\r\n  map,\r\n  omit,\r\n  reverse,\r\n} from 'lodash';\r\nimport moment from 'moment';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport { useEffect, useState } from 'react';\r\nimport { IoFlagSharp } from 'react-icons/io5';\r\nimport { MdKeyboardDoubleArrowRight } from 'react-icons/md';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Roles,\r\n  checkStatus,\r\n  clientRoles,\r\n  toastMessage,\r\n} from 'views/Utils/Common';\r\nimport ConfirmationDialog from './components/ConfirmationDialog';\r\n\r\nexport default function OrderChecksList({ value }) {\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [staffList, setStaffList] = useState([]);\r\n  const [cellValue, setCellValue] = useState({ assignedTo: '', vendor: '' });\r\n  const [startDate, setStartDate] = useState(\r\n    moment().clone().subtract(30, 'days').format('YYYY-MM-DD')\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    moment().clone().add(1, 'day').format('YYYY-MM-DD')\r\n  );\r\n  const [tableData, setTableData] = useState(data);\r\n  const [assigneeDetail, setAssigneeDetail] = useState({\r\n    assignee: '',\r\n    id: '',\r\n  });\r\n  const [vendorDetail, setVendorDetail] = useState({\r\n    vendor: '',\r\n    id: '',\r\n    vendorId: '',\r\n  });\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const role = localStorage?.getItem('role');\r\n\r\n  const clients =\r\n    localStorage?.getItem('clients') &&\r\n    isArray(JSON.parse(localStorage?.getItem('clients'))) &&\r\n    compact(\r\n      map(\r\n        JSON.parse(localStorage?.getItem('clients')),\r\n        (data) => data?.client_name\r\n      )\r\n    );\r\n\r\n  const checks =\r\n    localStorage?.getItem('checks') &&\r\n    isArray(JSON.parse(localStorage?.getItem('checks'))) &&\r\n    map(\r\n      JSON.parse(localStorage?.getItem('checks')),\r\n      (data) => data?.check_name\r\n    );\r\n\r\n  const vendorChecks =\r\n    role === Roles?.VENDOR\r\n      ? localStorage?.getItem('checks') &&\r\n        map(\r\n          JSON.parse(localStorage?.getItem('checks'))?.checksdata,\r\n          (data) => data?.check_name\r\n        )\r\n      : [];\r\n\r\n  const filterData = !isEmpty(checks)\r\n    ? filter(\r\n        data,\r\n        (check) =>\r\n          checks?.includes(check?.check_name) &&\r\n          check?.assignedTo ===\r\n            JSON.parse(localStorage?.getItem('user'))?.username\r\n      )\r\n    : localStorage?.getItem('checks') &&\r\n      isObject(JSON.parse(localStorage?.getItem('checks'))) &&\r\n      JSON.parse(localStorage?.getItem('checks'))?.allChecks\r\n    ? filter(\r\n        data,\r\n        (item) =>\r\n          item?.assignedTo ===\r\n          JSON.parse(localStorage?.getItem('user'))?.username\r\n      )\r\n    : [];\r\n\r\n  const filterVendorRows = map(\r\n    filter(\r\n      data,\r\n      (row) =>\r\n        vendorChecks?.includes(row?.check_name) &&\r\n        row?.vendor === JSON.parse(localStorage?.getItem('user'))?.username\r\n    ),\r\n    (data) =>\r\n      data?.check_status === 'VENDOR'\r\n        ? { ...data, check_status: 'PENDING' }\r\n        : data?.check_status === 'VENDOR_CLOSED'\r\n        ? { ...data, check_status: 'CLOSED' }\r\n        : data\r\n  );\r\n\r\n  const clientList =\r\n    !isEmpty(checks) && !isEmpty(clients)\r\n      ? filter(\r\n          data,\r\n          (item) =>\r\n            clients?.includes(item?.client_name) &&\r\n            checks?.includes(item?.check_name)\r\n        )\r\n      : !isEmpty(clients) &&\r\n        localStorage?.getItem('checks') &&\r\n        isObject(JSON.parse(localStorage?.getItem('checks'))) &&\r\n        JSON.parse(localStorage?.getItem('checks'))?.allChecks\r\n      ? filter(data, (item) => clients?.includes(item?.client_name))\r\n      : localStorage?.getItem('clients') &&\r\n        JSON.parse(localStorage?.getItem('clients'))[0]?.allClients &&\r\n        !isEmpty(checks)\r\n      ? filter(data, (item) => checks?.includes(item?.check_name))\r\n      : localStorage?.getItem('clients') &&\r\n        JSON.parse(localStorage?.getItem('clients'))[0]?.allClients &&\r\n        localStorage?.getItem('checks') &&\r\n        isObject(JSON.parse(localStorage?.getItem('checks'))) &&\r\n        JSON.parse(localStorage?.getItem('checks'))?.allChecks\r\n      ? data\r\n      : [];\r\n\r\n  useEffect(() => {\r\n    const rows =\r\n      role === Roles?.STAFF\r\n        ? filterData\r\n        : role === Roles?.VENDOR\r\n        ? value === 0\r\n          ? map(filterVendorRows, (data) => {\r\n              return {\r\n                ...data,\r\n                check_status: 'PENDING',\r\n              };\r\n            })\r\n          : map(filterVendorRows, (data) => {\r\n              return {\r\n                ...data,\r\n                check_status: 'VENDOR CLOSED',\r\n              };\r\n            })\r\n        : includes(clientRoles, role)\r\n        ? clientList\r\n        : data;\r\n    setTableData(rows);\r\n  }, [data, role]);\r\n\r\n  const handleRowSelectionChange = (currentRowsSelected, allRowsSelected) => {\r\n    const selectedIds = allRowsSelected.map((row) => {\r\n      const dataIndex = row.dataIndex;\r\n      return tableData[dataIndex]?.id;\r\n    });\r\n\r\n    setSelectedRows(concat(selectedRows, selectedIds));\r\n  };\r\n\r\n  const InputStyle = {\r\n    width: '800px',\r\n    fontSize: '0.675rem',\r\n  };\r\n\r\n  const getOrderChecks = () => {\r\n    setLoading(true);\r\n    fetch(\r\n      role === Roles?.VENDOR\r\n        ? `https://imranks.pythonanywhere.com/api/users/vendororderchecks/${\r\n            value === 0 ? 'open' : 'close'\r\n          }/${startDate}/${endDate}`\r\n        : `https://imranks.pythonanywhere.com/api/users/orderchecks/${\r\n            value === 0\r\n              ? 'open'\r\n              : value === 2\r\n              ? 'close'\r\n              : value === 3\r\n              ? 'cancelled'\r\n              : 'draft'\r\n          }/${startDate}/${endDate}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        let data = JSON?.parse(json['data']);\r\n        delete data['subRows'];\r\n        delete data['checks'];\r\n        setData(reverse(data));\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const checkLabels = (firstArray, secondArray, color) => {\r\n    const matchedLabel = find(firstArray, (label) => {\r\n      const matched = find(secondArray, { label: label });\r\n      return matched && matched.color === color;\r\n    });\r\n    return matchedLabel ? matchedLabel : null;\r\n  };\r\n\r\n  const handleUpdateData = (event, field_to_update, id, approvalForClose) => {\r\n    const checkDetail = find(data, (item) => item?.id === id);\r\n    const checkList = map(\r\n      filter(data, (row) => row?.order_id === checkDetail?.order_id),\r\n      (item) => (item?.id === id ? event?.target?.value : item?.check_status)\r\n    );\r\n\r\n    const closedOrder =\r\n      !isEmpty(checkList) &&\r\n      !includes(checkList, 'INITIATED') &&\r\n      !includes(checkList, 'DRAFT') &&\r\n      !includes(checkList, 'PENDING')\r\n        ? every(\r\n            checkList,\r\n            (value) => value === find(checkStatus, { label: value })?.label\r\n          )\r\n        : false;\r\n\r\n    const initiatedOrder = checkLabels(checkList, checkStatus, 'red')\r\n      ? checkLabels(checkList, checkStatus, 'red')\r\n      : checkLabels(checkList, checkStatus, 'orange')\r\n      ? checkLabels(checkList, checkStatus, 'orange')\r\n      : includes(checkList, 'INITIATED')\r\n      ? 'INITIATED'\r\n      : null;\r\n\r\n    let bodyData = {\r\n      table_name: 'order_checks',\r\n      field_to_update: field_to_update,\r\n      new_value: event.target.value,\r\n      table_id: id,\r\n    };\r\n\r\n    const orderData = {\r\n      date_closed: moment(new Date()).format('YYYY-MM-DD HH:mm:ss'),\r\n      status: closedOrder ? 'CLOSED' : initiatedOrder,\r\n    };\r\n\r\n    try {\r\n      let response = RequestsApi.UpdateData(bodyData);\r\n      response.then((res) => {\r\n        if (res.status === 200) {\r\n          toastMessage('Order check updated succesfully');\r\n          getOrderChecks();\r\n          if (closedOrder || initiatedOrder) {\r\n            const res1 = RequestsApi.updateOrder(\r\n              initiatedOrder ? omit(orderData, 'date_closed') : orderData,\r\n              checkDetail?.order_id\r\n            );\r\n            res1.then((res) => {\r\n              if (res?.status === 200 && closedOrder) {\r\n                RequestsApi.enableInvoice(checkDetail?.order_id);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching checks:', error);\r\n    }\r\n  };\r\n\r\n  const handleChangeAssignee = (assignee, id) => {\r\n    const checkDetail = find(data, (item) => item?.id === id);\r\n    const checkList = map(\r\n      filter(data, (row) => row?.order_id === checkDetail?.order_id),\r\n      (item) => item?.check_status\r\n    );\r\n\r\n    const closedOrder =\r\n      !isEmpty(checkList) &&\r\n      !includes(checkList, 'INITIATED') &&\r\n      !includes(checkList, 'DRAFT')\r\n        ? every(\r\n            checkList,\r\n            (value) => value === find(checkStatus, { label: value })?.label\r\n          )\r\n        : false;\r\n\r\n    let orderData = {\r\n      table_name: 'orders',\r\n      field_to_update: 'status',\r\n      new_value: 'PENDING',\r\n      table_id: checkDetail?.order_id,\r\n    };\r\n\r\n    const logsArray = JSON?.parse(checkDetail?.logs);\r\n    const activityLogs = {\r\n      check_status: '',\r\n      assignedTo: assignee,\r\n      internalnotes: '',\r\n      notes: '',\r\n      sentence: checkDetail?.assignedTo\r\n        ? `Assignee was updated ${checkDetail?.assignedTo} to ${assignee}`\r\n        : `Assignee was updated to ${assignee}`,\r\n      updatedAt: moment()?.format('MMMM DD, YYYY hh:mm a'),\r\n      docUpload: [],\r\n    };\r\n\r\n    const differingKeysJSON =\r\n      logsArray !== null\r\n        ? JSON.stringify([activityLogs, ...logsArray], null, 2)\r\n        : JSON.stringify([activityLogs]);\r\n\r\n    let bodyData = {\r\n      data: {\r\n        check_status: 'INITIATED',\r\n        assignedTo: assignee,\r\n        internalnotes: checkDetail.internalnotes,\r\n        notes: checkDetail.notes,\r\n        logs: differingKeysJSON,\r\n        order_id: checkDetail.order_id,\r\n        client_id: checkDetail?.client_id,\r\n        check_name: checkDetail?.check_name,\r\n        docUpload: checkDetail?.docUpload,\r\n        date_initiated: moment().format('YYYY-MM-DD'),\r\n        date_closed: null,\r\n        deadline: moment()\r\n          .add(checkDetail?.tat ? parseInt(checkDetail?.tat) + 1 : 14, 'days')\r\n          .format('YYYY-MM-DD hh:mm:ss'),\r\n      },\r\n      id: id,\r\n    };\r\n\r\n    if (isEmpty(selectedRows)) {\r\n      try {\r\n        if (isEmpty(activityLogs)) {\r\n          bodyData.data = omit(bodyData.data, 'logs');\r\n        } else if (isEmpty(bodyData?.data?.deadline)) {\r\n          bodyData.data = omit(bodyData.data, 'deadline');\r\n        }\r\n        let response = RequestsApi.EditOrderchecks(bodyData);\r\n        response.then((res) => {\r\n          if (res.status === 200) {\r\n            setCellValue({ assignedTo: '' });\r\n            ({ assignee: '', id: '' });\r\n            if (closedOrder) {\r\n              RequestsApi.UpdateData(orderData);\r\n            }\r\n            toastMessage('Check updated successfully');\r\n            handleDailogClose();\r\n            getOrderChecks();\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching checks:', error);\r\n        handleDailogClose();\r\n      }\r\n    } else {\r\n      let bodyData = {\r\n        table_name: 'order_checks',\r\n        field_to_update: 'assignedTo',\r\n        new_value: assignee,\r\n        table_id: selectedRows,\r\n        column_to_match: 'id',\r\n      };\r\n      let orderData = {\r\n        table_name: 'order_checks',\r\n        field_to_update: 'check_status',\r\n        new_value: 'INITIATED',\r\n        table_id: selectedRows,\r\n        column_to_match: 'id',\r\n      };\r\n      let checkData = {\r\n        table_name: 'order_checks',\r\n        field_to_update: 'deadline',\r\n        new_value: moment()\r\n          .add(checkDetail?.tat ? checkDetail?.tat : 14, 'days')\r\n          .format('YYYY-MM-DD hh:mm:ss'),\r\n        table_id: selectedRows,\r\n        column_to_match: 'id',\r\n      };\r\n\r\n      try {\r\n        let response = RequestsApi.UpdateMultipleAssignee(bodyData);\r\n        response.then((res) => {\r\n          if (res.status === 200) {\r\n            let response1 = RequestsApi.UpdateMultipleAssignee(orderData);\r\n            response1.then((res) => {\r\n              if (res?.status === 200) {\r\n                RequestsApi.UpdateMultipleAssignee(checkData);\r\n                setAssigneeDetail({ assignee: '', id: '' });\r\n                handleDailogClose();\r\n                toastMessage('Assignee updated successfully');\r\n                setSelectedRows([]);\r\n                getOrderChecks();\r\n              }\r\n            });\r\n          }\r\n        });\r\n      } catch (error) {\r\n        handleDailogClose();\r\n        console.error('Error fetching checks:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangeVandor = (vendor, id, vendorId) => {\r\n    const checkDetail = find(data, (item) => item?.id === id);\r\n    const checksArray = filter(\r\n      role === Roles?.STAFF\r\n        ? filterData\r\n        : role === Roles?.VENDOR\r\n        ? filterVendorRows\r\n        : data,\r\n      (data) => data?.assignedTo && includes(selectedRows, data?.id)\r\n    );\r\n\r\n    const vendorDetail = find(\r\n      staffList,\r\n      (data) => data?.id === parseInt(vendorId)\r\n    );\r\n\r\n    const vendorIds = vendorDetail?.checks\r\n      ? map(\r\n          filter(checksArray, (data) =>\r\n            includes(\r\n              map(\r\n                JSON.parse(vendorDetail?.checks)?.checksdata,\r\n                (data) => data?.check_name\r\n              ),\r\n              data?.check_name\r\n            )\r\n          ),\r\n          (data) => data?.id\r\n        )\r\n      : [];\r\n\r\n    let bodyData = {\r\n      data: {\r\n        check_status: 'VENDOR',\r\n        assignedTo: checkDetail?.assignedTo,\r\n        internalnotes: checkDetail.internalnotes,\r\n        notes: checkDetail.notes,\r\n        logs: checkDetail.logs,\r\n        order_id: checkDetail.order_id,\r\n        client_id: checkDetail?.client_id,\r\n        check_name: checkDetail?.check_name,\r\n        docUpload: checkDetail?.docUpload,\r\n        date_initiated: checkDetail?.date_initiated,\r\n        deadline: checkDetail?.deadline,\r\n        vendor_assigned: moment(new Date()).format('YYYY-MM-DD hh:mm:ss'),\r\n        vendor: vendor,\r\n      },\r\n      id: id,\r\n    };\r\n\r\n    let checkData = {\r\n      table_name: 'order_checks',\r\n      field_to_update: 'vendor',\r\n      new_value: vendor,\r\n      table_id: vendorIds,\r\n      column_to_match: 'id',\r\n    };\r\n\r\n    let orderData = {\r\n      table_name: 'order_checks',\r\n      field_to_update: 'check_status',\r\n      new_value: 'VENDOR',\r\n      table_id: vendorIds,\r\n      column_to_match: 'id',\r\n    };\r\n\r\n    if (isEmpty(selectedRows)) {\r\n      try {\r\n        if (isEmpty(bodyData?.data?.deadline)) {\r\n          bodyData.data = omit(bodyData.data, 'deadline');\r\n        }\r\n        const response = RequestsApi.EditOrderchecks(bodyData);\r\n        response?.then((res) => {\r\n          if (res?.status === 200) {\r\n            toastMessage('vendor assigned successfully');\r\n            getOrderChecks();\r\n            setVendorDetail({ vendor: '', id: '', vendorId: '' });\r\n            handleDailogClose();\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.error('error', e);\r\n      }\r\n    } else {\r\n      try {\r\n        const response = RequestsApi.UpdateMultipleAssignee(checkData);\r\n        response?.then((res) => {\r\n          if (res.status === 200) {\r\n            let response1 = RequestsApi.UpdateMultipleAssignee(orderData);\r\n            response1.then((res) => {\r\n              if (res?.status === 200) {\r\n                toastMessage('vendor assigned successfully');\r\n                getOrderChecks();\r\n                setVendorDetail({ vendor: '', id: '', vendorId: '' });\r\n                setSelectedRows([]);\r\n                handleDailogClose();\r\n              }\r\n            });\r\n          }\r\n          // if (res?.status === 200) {\r\n          //   toastMessage('vendor assigned successfully');\r\n          //   getOrderChecks();\r\n          //   setVendorDetail({ vendor: '', id: '', vendorId: '' });\r\n          //   setSelectedRows([]);\r\n          //   handleDailogClose();\r\n          // }\r\n        });\r\n      } catch (e) {\r\n        console.error('error', e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: 'order_id',\r\n      label: 'ORDER #',\r\n    },\r\n    {\r\n      name: 'id',\r\n      label: 'CHECK #',\r\n    },\r\n    {\r\n      name: 'CandidateName',\r\n      label: 'CANDIDATE NAME',\r\n    },\r\n    {\r\n      name: 'client_name',\r\n      label: 'CLIENT',\r\n      options: {\r\n        display:\r\n          role === Roles?.VENDOR || includes(clientRoles, role) ? false : true,\r\n      },\r\n    },\r\n    {\r\n      name: 'check_name',\r\n      label: 'CHECKS',\r\n    },\r\n    {\r\n      name: 'date_created',\r\n      label: 'CREATED DATE',\r\n      options: {\r\n        display: role === Roles?.VENDOR ? false : true,\r\n        filter: false,\r\n        customBodyRender: (value, cellMeta) => {\r\n          return value ? moment(value).format('DD-MMM-YY') : '-';\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'date_initiated',\r\n      label: 'INITIATED DATE',\r\n      options: {\r\n        filter: false,\r\n        display: value === 1 || includes(clientRoles, role) ? false : true,\r\n        customBodyRender: (value, cellMeta) => {\r\n          return value ? moment(value).format('DD-MMM-YY') : '-';\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'tat',\r\n      label: 'TAT',\r\n      options: {\r\n        filter: false,\r\n        display: value === 1 || includes(clientRoles, role) ? false : true,\r\n        customBodyRender: (value, cellMeta) => {\r\n          return value ? value : 14;\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'deadline',\r\n      label: 'DEADLINE',\r\n      options: {\r\n        filter: false,\r\n        display: value === 1 || includes(clientRoles, role) ? false : true,\r\n        customBodyRender: (value, cellMeta) => {\r\n          return value ? moment(value).format('DD-MMM-YY') : '-';\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'date_created',\r\n      label: 'AGING',\r\n      options: {\r\n        filter: false,\r\n        display: role === Roles?.STAFF ? true : false,\r\n        customBodyRender: (rowValue, tableMeta) => {\r\n          const startDate = moment(\r\n            moment(rowValue).format('DD-MMM-YY'),\r\n            'DD-MMM-YY'\r\n          );\r\n          const endDate =\r\n            value === 1\r\n              ? moment(\r\n                  find(data, (row) => row?.id === tableMeta['rowData'][1])\r\n                    ?.date_closed\r\n                )\r\n              : moment();\r\n\r\n          return endDate?.diff(startDate, 'days');\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'followUp',\r\n      label: 'FOLLOW UP',\r\n      options: {\r\n        display:\r\n          role === Roles?.VENDOR || value === 1 || includes(clientRoles, role)\r\n            ? false\r\n            : true,\r\n        filter: false,\r\n        customBodyRender: (value, cellMeta) => {\r\n          const checkDetail = find(data, { id: cellMeta?.rowData[1] });\r\n          return checkDetail?.calllogs &&\r\n            !isEmpty(checkDetail?.calllogs) &&\r\n            find(\r\n              reverse(JSON?.parse(checkDetail?.calllogs)),\r\n              (data) => data?.followUp\r\n            )?.followUp\r\n            ? moment(\r\n                find(\r\n                  reverse(JSON?.parse(checkDetail?.calllogs)),\r\n                  (data) => data?.followUp\r\n                )?.followUp\r\n              )?.format('DD-MMM-YY')\r\n            : '-';\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'assignedTo',\r\n      label: 'ASSIGNED TO',\r\n      options: {\r\n        display:\r\n          role === Roles?.VENDOR || value === 1 || includes(clientRoles, role)\r\n            ? false\r\n            : true,\r\n        customBodyRender: (cellData, cellMeta) => {\r\n          if (\r\n            value === 0 &&\r\n            (role === Roles?.ADMIN || role === Roles?.SUPERVISOR)\r\n          ) {\r\n            const staffArray = chain(staffList)\r\n              .filter((item) =>\r\n                item.checks &&\r\n                (isArray(JSON.parse(item.checks)) ||\r\n                  isArray(JSON.parse(item.checks)?.checksdata))\r\n                  ? (isArray(JSON.parse(item.checks)?.checksdata)\r\n                      ? JSON.parse(item.checks)?.checksdata\r\n                      : JSON.parse(item.checks)\r\n                    )?.some(\r\n                      (check) => check.check_name === cellMeta['rowData'][4]\r\n                    )\r\n                  : isObject(JSON.parse(item?.checks)) && item\r\n              )\r\n              .value();\r\n\r\n            return (\r\n              <Select\r\n                id='assignedTo'\r\n                key={cellMeta?.rowIndex}\r\n                name='assignedTo'\r\n                value={\r\n                  (cellValue?.cellIndex === cellMeta?.rowIndex\r\n                    ? cellValue?.assignedTo\r\n                    : cellData) || cellData\r\n                }\r\n                sx={{\r\n                  fontSize: '0.7rem',\r\n                  '& .MuiSelect-select': {\r\n                    padding: '10px 15px !important',\r\n                  },\r\n                }}\r\n                onChange={(e) => {\r\n                  setOpen(true);\r\n                  setAssigneeDetail({\r\n                    assignee: e?.target?.value,\r\n                    id: cellMeta['rowData'][1],\r\n                  });\r\n                }}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n                MenuProps={{\r\n                  PaperProps: {\r\n                    style: {\r\n                      maxHeight: 200,\r\n                      width: 160,\r\n                    },\r\n                  },\r\n                  anchorOrigin: {\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                  },\r\n                  transformOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                  },\r\n                  getContentAnchorEl: null,\r\n                }}\r\n              >\r\n                {!isEmpty(\r\n                  filter(staffArray, (data) => data?.role != Roles?.VENDOR)\r\n                ) ? (\r\n                  filter(\r\n                    staffArray,\r\n                    (data) => data?.role != Roles?.VENDOR\r\n                  )?.map((option, i) => (\r\n                    <MenuItem\r\n                      value={option.username}\r\n                      key={i}\r\n                      sx={{ fontSize: '0.7rem' }}\r\n                    >\r\n                      {option.username}\r\n                      {/* {`${option.username} ${\r\n                        option?.role === Roles?.VENDOR ? '(V)' : ''\r\n                      }`} */}\r\n                    </MenuItem>\r\n                  ))\r\n                ) : (\r\n                  <MenuItem sx={{ fontSize: '0.8rem' }}>\r\n                    No staff is found\r\n                  </MenuItem>\r\n                )}\r\n              </Select>\r\n            );\r\n          } else {\r\n            return cellData;\r\n          }\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'vendor',\r\n      label: 'VENDOR',\r\n      options: {\r\n        display:\r\n          role === Roles?.VENDOR || value === 1 || includes(clientRoles, role)\r\n            ? false\r\n            : true,\r\n        customBodyRender: (cellData, cellMeta) => {\r\n          if (\r\n            value === 0 &&\r\n            (role === Roles?.ADMIN ||\r\n              role === Roles?.SUPERVISOR ||\r\n              role === Roles?.STAFF)\r\n          ) {\r\n            const staffArray = chain(staffList)\r\n              .filter((item) =>\r\n                item.checks &&\r\n                (isArray(JSON.parse(item.checks)) ||\r\n                  isArray(JSON.parse(item.checks)?.checksdata))\r\n                  ? (isArray(JSON.parse(item.checks)?.checksdata)\r\n                      ? JSON.parse(item.checks)?.checksdata\r\n                      : JSON.parse(item.checks)\r\n                    )?.some(\r\n                      (check) => check.check_name === cellMeta['rowData'][4]\r\n                    )\r\n                  : isObject(JSON.parse(item?.checks)) && item\r\n              )\r\n              .value();\r\n\r\n            return (\r\n              <Select\r\n                id='vendor'\r\n                key={cellMeta?.rowIndex}\r\n                name='vendor'\r\n                disabled={isEmpty(cellMeta['rowData'][11])}\r\n                value={\r\n                  (cellValue?.cellIndex === cellMeta?.rowIndex\r\n                    ? vendorDetail?.vendor\r\n                    : cellData) || cellData\r\n                }\r\n                sx={{\r\n                  fontSize: '0.7rem',\r\n                  '& .MuiSelect-select': {\r\n                    padding: '10px 15px !important',\r\n                  },\r\n                }}\r\n                onChange={(e) => {\r\n                  setVendorDetail({\r\n                    vendor: e?.target?.value,\r\n                    id: cellMeta['rowData'][1],\r\n                    vendorId: find(staffList, { username: e?.target?.value })\r\n                      ?.id,\r\n                  });\r\n                  setOpen(true);\r\n                }}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n                MenuProps={{\r\n                  PaperProps: {\r\n                    style: {\r\n                      maxHeight: 200,\r\n                      width: 160,\r\n                    },\r\n                  },\r\n                  anchorOrigin: {\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                  },\r\n                  transformOrigin: {\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                  },\r\n                  getContentAnchorEl: null,\r\n                }}\r\n              >\r\n                {!isEmpty(filter(staffArray, { role: 'vendor' })) ? (\r\n                  filter(staffArray, { role: 'vendor' })?.map((option, i) => (\r\n                    <MenuItem\r\n                      value={option.username}\r\n                      key={i}\r\n                      sx={{ fontSize: '0.7rem' }}\r\n                    >\r\n                      {option?.username}\r\n                    </MenuItem>\r\n                  ))\r\n                ) : (\r\n                  <MenuItem sx={{ fontSize: '0.8rem' }}>\r\n                    No vendor is found\r\n                  </MenuItem>\r\n                )}\r\n              </Select>\r\n            );\r\n          } else {\r\n            return cellData;\r\n          }\r\n        },\r\n        setCellProps: () => ({\r\n          style: { width: role === Roles?.STAFF ? '150px' : '110px' },\r\n        }),\r\n      },\r\n    },\r\n    // {\r\n    //   name: 'deadline',\r\n    //   label: 'FLAG',\r\n    //   options: {\r\n    //     customBodyRender: (cellData, cellMeta) => {\r\n    //       const currentDate = moment();\r\n\r\n    //       const deadlineDate = moment(cellData);\r\n\r\n    //       const daysRemaining = deadlineDate?.diff(currentDate, 'days');\r\n\r\n    //       let ballColor;\r\n    //       if (daysRemaining < 0) {\r\n    //         ballColor = 'red';\r\n    //       } else if (daysRemaining === 0) {\r\n    //         ballColor = 'yellow';\r\n    //       } else {\r\n    //         ballColor = 'orange';\r\n    //       }\r\n\r\n    //       return (\r\n    //         <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n    //           <IoFlagSharp fill={ballColor} size={20}/>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    // },\r\n    {\r\n      name: 'check_status',\r\n      label: 'STATUS',\r\n      options: {\r\n        customBodyRender: (cellData, cellMeta) => {\r\n          const currentDate = moment();\r\n\r\n          const deadlineDate = moment(cellMeta['rowData'][8]);\r\n\r\n          const daysRemaining = deadlineDate?.diff(currentDate, 'days');\r\n\r\n          let ballColor;\r\n          if (value === 2) {\r\n            ballColor = 'green';\r\n          } else {\r\n            if (daysRemaining < 0) {\r\n              ballColor = 'red';\r\n            } else if (daysRemaining === 0) {\r\n              ballColor = 'yellow';\r\n            } else {\r\n              ballColor = 'orange';\r\n            }\r\n          }\r\n\r\n          return (\r\n            <span\r\n              style={{\r\n                // padding:4,\r\n                color: find(checkStatus, {\r\n                  label: cellData,\r\n                })?.color,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                gap: 6,\r\n                // border: '1px solid grey',\r\n                // borderRadius: '0.3rem',\r\n                // padding: '0px 7px',\r\n                // borderColor: find(checkStatus, {\r\n                //   label: cellData,\r\n                // })?.color,\r\n              }}\r\n            >\r\n              {cellData} <IoFlagSharp fill={ballColor} size={21} />\r\n            </span>\r\n          );\r\n        },\r\n        //   if (\r\n        //     value === 0 &&\r\n        //     (role === Roles?.ADMIN ||\r\n        //       role === Roles?.SUPERVISOR ||\r\n        //       role === Roles?.STAFF ||\r\n        //       role === Roles?.VENDOR)\r\n        //   ) {\r\n        //     const status =\r\n        //       cellValue?.cellIndex === cellMeta?.rowIndex\r\n        //         ? cellValue?.check_status\r\n        //         : cellData;\r\n\r\n        //     return (\r\n        //       <Select\r\n        //         id='check_status'\r\n        //         key={cellMeta?.rowIndex}\r\n        //         name='check_status'\r\n        //         value={status}\r\n        //         sx={{\r\n        //           fontSize: '0.7rem',\r\n        //           color: find(checkStatus, {\r\n        //             label: status,\r\n        //           })?.color,\r\n        //           '& .MuiSelect-select': {\r\n        //             padding: '10px 15px !important',\r\n        //             paddingRight: '18px !important',\r\n        //           },\r\n        //         }}\r\n        //         onChange={(e) => {\r\n        //           setCellValue({\r\n        //             ...cellValue,\r\n        //             check_status: e?.target?.value,\r\n        //             cellIndex: cellMeta?.rowIndex,\r\n        //           });\r\n        //           getClient(\r\n        //             cellMeta['rowData'][0],\r\n        //             e,\r\n        //             'check_status',\r\n        //             cellMeta['rowData'][1]\r\n        //           );\r\n        //         }}\r\n        //         style={{\r\n        //           width: '100%',\r\n        //         }}\r\n        //         MenuProps={{\r\n        //           PaperProps: {\r\n        //             style: {\r\n        //               maxHeight: 200,\r\n        //               width: 250,\r\n        //             },\r\n        //           },\r\n        //           anchorOrigin: {\r\n        //             vertical: 'bottom',\r\n        //             horizontal: 'left',\r\n        //           },\r\n        //           transformOrigin: {\r\n        //             vertical: 'top',\r\n        //             horizontal: 'left',\r\n        //           },\r\n        //           getContentAnchorEl: null,\r\n        //         }}\r\n        //       >\r\n        //         {checkStatus.map((sts, i) => (\r\n        //           <MenuItem\r\n        //             value={sts?.label}\r\n        //             key={i}\r\n        //             sx={{\r\n        //               fontSize: '0.7rem',\r\n        //               color: sts?.color,\r\n        //             }}\r\n        //             disabled={\r\n        //               sts?.label === 'DRAFT' ||\r\n        //               sts?.label === 'INITIATED' ||\r\n        //               sts?.label === 'VENDOR'\r\n        //             }\r\n        //             title={sts?.label}\r\n        //           >\r\n        //             {sts?.label}\r\n        //           </MenuItem>\r\n        //         ))}\r\n        //       </Select>\r\n        //     );\r\n        //   } else {\r\n        //     return (\r\n        //       <span\r\n        //         style={{\r\n        //           color: find(checkStatus, {\r\n        //             label: cellData,\r\n        //           })?.color,\r\n        //         }}\r\n        //       >\r\n        //         {cellData}\r\n        //       </span>\r\n        //     );\r\n        //   }\r\n      },\r\n    },\r\n    {\r\n      name: 'action',\r\n      label: 'ACTION',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => {\r\n          const isCancelled = tableMeta['rowData'][13] === 'CANCELLED';\r\n\r\n          return (\r\n            <IconButton\r\n              sx={{\r\n                cursor: isCancelled ? 'not-allowed' : 'pointer',\r\n              }}\r\n              onClick={() => {\r\n                if (!isCancelled) {\r\n                  navigate(\r\n                    '/orderchecks/checkDetails/' + tableMeta['rowData'][1]\r\n                  );\r\n                }\r\n              }}\r\n            >\r\n              <MdKeyboardDoubleArrowRight size={23} color='#524f4f' />\r\n            </IconButton>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const getAssigneeList = async () => {\r\n    let response = await RequestsApi.ListUsers();\r\n    if (response?.status === 200) {\r\n      let resData = JSON?.parse(response.data.data);\r\n      setStaffList(\r\n        filter(\r\n          resData,\r\n          (data) =>\r\n            data?.role === 'staff' ||\r\n            data?.role === 'supervisor' ||\r\n            data?.role === 'vendor'\r\n        )\r\n      );\r\n    } else {\r\n      console.error('Unexpected response status:', response?.status);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOrderChecks();\r\n    getAssigneeList();\r\n  }, []);\r\n\r\n  const options = {\r\n    filterOptions: 'fullWidth',\r\n    selectableRows: role === Roles?.VENDOR || value === 0 ? 'multiple' : false,\r\n    print: false,\r\n    selectToolbarPlacement: 'none',\r\n    onRowSelectionChange: handleRowSelectionChange,\r\n    rowsPerPageOptions: [30, 50, 100],\r\n    rowsPerPage: 30,\r\n    viewColumns: false,\r\n    downloadOptions: {\r\n      filterOptions: {\r\n        useDisplayedColumnsOnly: true,\r\n        useDisplayedRowsOnly: true,\r\n      },\r\n    },\r\n    customFilterDialogFooter: () => (\r\n      <div\r\n        style={{\r\n          paddingTop: '3rem',\r\n          width: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          gap: 18,\r\n        }}\r\n      >\r\n        <TextField\r\n          label='Start Date'\r\n          type='date'\r\n          value={startDate}\r\n          fullWidth\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          label='End Date'\r\n          type='date'\r\n          value={endDate}\r\n          fullWidth\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <Button\r\n          sx={{ mt: 10, pr: 4, pl: 4 }}\r\n          onClick={getOrderChecks}\r\n          variant='contained'\r\n        >\r\n          Apply\r\n        </Button>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const handleDailogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getMuiTheme = () =>\r\n    createTheme({\r\n      components: {\r\n        MUIDataTable: {\r\n          styleOverrides: {\r\n            root: {\r\n              boxShadow: 'none',\r\n              backgroundColor: '#FFF',\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableHeadCell: {\r\n          styleOverrides: {\r\n            root: {\r\n              backgroundColor: '#2152a1',\r\n              color: '#fff',\r\n              border: 'none',\r\n              '&:first-of-type': {\r\n                borderTopLeftRadius: '1rem',\r\n                // borderBottomLeftRadius: \"1rem\",\r\n              },\r\n              '&:last-of-type': {\r\n                borderTopRightRadius: '1rem',\r\n                // borderBottomRightRadius: \"1rem\",\r\n              },\r\n            },\r\n            toolButton: {\r\n              fontWeight: 'bold',\r\n              fontSize: '0.7rem',\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableSelectCell: {\r\n          styleOverrides: {\r\n            headerCell: {\r\n              border: 'none',\r\n              borderTopLeftRadius: '1rem',\r\n              // borderBottomLeftRadius: '1rem',\r\n              backgroundColor: '#2152a1',\r\n              '& .MuiCheckbox-root': {\r\n                color: '#fff',\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MuiToolbar: {\r\n          styleOverrides: {\r\n            root: {\r\n              minHeight: '30px!important',\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          styleOverrides: {\r\n            root: {\r\n              '&:nth-of-type(even)': {\r\n                backgroundColor: '#EEF2FF',\r\n              },\r\n              '&:nth-of-type(odd)': {\r\n                backgroundColor: '#FFF',\r\n              },\r\n              '& td': {\r\n                textAlign: 'left', // Center align body text data\r\n                border: 'none',\r\n              },\r\n              marginBottom: '10px',\r\n            },\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          styleOverrides: {\r\n            root: {\r\n              padding:\r\n                role === Roles?.VENDOR || value === 0\r\n                  ? '4px !important'\r\n                  : '8px !important',\r\n              '&:first-of-type': {\r\n                paddingLeft:\r\n                  role === Roles?.VENDOR || value === 0\r\n                    ? '0'\r\n                    : '1rem !important',\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          styleOverrides: {\r\n            root: {\r\n              '&:nth-of-type(even)': {\r\n                backgroundColor: '#dde1e9',\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          styleOverrides: {\r\n            root: {\r\n              fontSize: '0.7rem',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  return (\r\n    <Grid item fullwidth='true' width='100%'>\r\n      {loading ? (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <CircularProgress color='inherit' size={20} />\r\n        </div>\r\n      ) : (\r\n        <ThemeProvider theme={getMuiTheme()}>\r\n          <MUIDataTable\r\n            title={''}\r\n            data={tableData}\r\n            columns={columns}\r\n            options={{ ...options }}\r\n            style={{ ...InputStyle }}\r\n          />\r\n        </ThemeProvider>\r\n      )}\r\n\r\n      {open && (\r\n        <ConfirmationDialog\r\n          open={open}\r\n          handleDailogClose={handleDailogClose}\r\n          handleChangeAssignee={() =>\r\n            !isEmpty(assigneeDetail?.assignee)\r\n              ? handleChangeAssignee(\r\n                  assigneeDetail?.assignee,\r\n                  assigneeDetail?.id\r\n                )\r\n              : !isEmpty(vendorDetail?.vendor) &&\r\n                handleChangeVandor(\r\n                  vendorDetail?.vendor,\r\n                  vendorDetail?.id,\r\n                  vendorDetail?.vendorId\r\n                )\r\n          }\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import { Box, Tab, Tabs } from '@mui/material';\nimport { useState } from 'react';\nimport OrderChecksList from '../Orders/OrderChecksList';\nimport { Roles } from 'views/Utils/Common';\n\nconst ChecksTab = () => {\n  const [value, setValue] = useState(0);\n  const role = localStorage?.getItem('role');\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: '100%',\n          borderRadius: 2,\n        }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleTabChange}\n          aria-label='basic tabs example'\n        >\n          <Tab\n            label='Open Checks'\n            sx={{\n              textTransform: 'none',\n              backgroundColor: '#e6e6e6',\n              mx: 1,\n              borderRadius: 2,\n            }}\n          />\n          <Tab\n            label='Draft Checks'\n            sx={{\n              textTransform: 'none',\n              backgroundColor: '#e6e6e6',\n              mx: 1,\n              borderRadius: 2,\n              display: role === Roles?.VENDOR ? 'none' : 'block',\n            }}\n          />\n          <Tab\n            label='Closed Checks'\n            sx={{\n              textTransform: 'none',\n              backgroundColor: '#e6e6e6',\n              mx: 1,\n              borderRadius: 2,\n            }}\n          />\n          <Tab\n            label='Cancel Check'\n            sx={{\n              textTransform: 'none',\n              backgroundColor: '#e6e6e6',\n              mx: 1,\n              borderRadius: 2,\n              display: role === Roles?.ADMIN ? 'block' : 'none',\n            }}\n          />\n        </Tabs>\n      </Box>\n      <Box sx={{ width: '100%', mt: 1 }}>\n        {value === 0 && <OrderChecksList value={value} />}\n        {value === 1 && <OrderChecksList value={value} />}\n        {value === 2 && <OrderChecksList value={value} />}\n        {value === 3 && <OrderChecksList value={value} />}\n      </Box>\n    </>\n  );\n};\nexport default ChecksTab;\n"],"names":["_ref","open","handleDailogClose","handleChangeAssignee","_jsx","_Fragment","children","_jsxs","Dialog","onClose","sx","width","height","DialogTitle","id","DialogContent","DialogContentText","fontSize","DialogActions","pr","pb","Button","onClick","color","variant","autoFocus","OrderChecksList","_localStorage","_localStorage2","_localStorage3","_localStorage4","_localStorage5","_localStorage6","_localStorage7","_localStorage8","_JSON$parse","_localStorage9","_localStorage11","_localStorage12","_JSON$parse3","_localStorage13","_localStorage16","_localStorage17","_JSON$parse6","_localStorage18","_localStorage19","_JSON$parse$","_localStorage20","_localStorage21","_JSON$parse$2","_localStorage22","_localStorage23","_localStorage24","_JSON$parse7","_localStorage25","value","data","setData","useState","setOpen","navigate","useNavigate","loading","setLoading","staffList","setStaffList","cellValue","setCellValue","assignedTo","vendor","startDate","setStartDate","moment","clone","subtract","format","endDate","setEndDate","add","tableData","setTableData","assigneeDetail","setAssigneeDetail","assignee","vendorDetail","setVendorDetail","vendorId","selectedRows","setSelectedRows","role","localStorage","getItem","clients","isArray","JSON","parse","compact","map","client_name","checks","check_name","vendorChecks","Roles","checksdata","filterData","isEmpty","isObject","allChecks","filter","item","_JSON$parse4","_localStorage14","username","check","_JSON$parse2","_localStorage10","includes","filterVendorRows","row","_JSON$parse5","_localStorage15","check_status","clientList","allClients","useEffect","rows","clientRoles","getOrderChecks","fetch","concat","then","response","json","reverse","finally","columns","name","label","options","display","customBodyRender","cellMeta","rowValue","tableMeta","_find3","find","date_closed","diff","_find4","_moment2","_find5","checkDetail","rowData","calllogs","followUp","cellData","_filter","staffArray","chain","_JSON$parse9","_ref2","_JSON$parse10","_JSON$parse11","some","Select","cellIndex","rowIndex","padding","onChange","e","_e$target","target","style","MenuProps","PaperProps","maxHeight","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MenuItem","option","i","_filter2","_JSON$parse12","_ref3","_JSON$parse13","_JSON$parse14","disabled","_e$target2","_find6","_e$target3","setCellProps","_find7","currentDate","deadlineDate","daysRemaining","ballColor","checkStatus","alignItems","gap","IoFlagSharp","fill","size","isCancelled","IconButton","cursor","MdKeyboardDoubleArrowRight","async","RequestsApi","status","resData","console","error","getAssigneeList","filterOptions","selectableRows","print","selectToolbarPlacement","onRowSelectionChange","handleRowSelectionChange","currentRowsSelected","allRowsSelected","selectedIds","_tableData$dataIndex","dataIndex","rowsPerPageOptions","rowsPerPage","viewColumns","downloadOptions","useDisplayedColumnsOnly","useDisplayedRowsOnly","customFilterDialogFooter","paddingTop","justifyContent","TextField","type","fullWidth","InputLabelProps","shrink","mt","pl","Grid","fullwidth","CircularProgress","ThemeProvider","theme","createTheme","components","MUIDataTable","styleOverrides","root","boxShadow","backgroundColor","MUIDataTableHeadCell","border","borderTopLeftRadius","borderTopRightRadius","toolButton","fontWeight","MUIDataTableSelectCell","headerCell","MuiToolbar","minHeight","MUIDataTableBodyRow","textAlign","marginBottom","MuiTableCell","paddingLeft","MUIDataTableBodyCell","title","ConfirmationDialog","handleChangeVandor","checksArray","parseInt","vendorIds","_JSON$parse8","bodyData","internalnotes","notes","logs","order_id","client_id","docUpload","date_initiated","deadline","vendor_assigned","Date","checkData","table_name","field_to_update","new_value","table_id","column_to_match","orderData","_bodyData$data2","omit","res","toastMessage","_moment","checkList","closedOrder","every","_find2","logsArray","activityLogs","sentence","updatedAt","differingKeysJSON","stringify","tat","_bodyData$data","ChecksTab","setValue","Box","borderRadius","Tabs","handleTabChange","event","newValue","Tab","textTransform","mx"],"sourceRoot":""}
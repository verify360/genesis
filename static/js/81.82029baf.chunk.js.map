{"version":3,"file":"static/js/81.82029baf.chunk.js","mappings":"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","sources":["views/Orders/index.js","views/Orders/OrderTabs.js","views/Orders/components/ConfirmationDialog.js","../node_modules/@mui/icons-material/ReadMore.js"],"sourcesContent":["import ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport {\r\n  compact,\r\n  every,\r\n  filter,\r\n  find,\r\n  identity,\r\n  includes,\r\n  isArray,\r\n  isEmpty,\r\n  map,\r\n  round,\r\n  truncate,\r\n  uniqBy,\r\n} from 'lodash';\r\nimport moment from 'moment';\r\nimport MUIDataTable from 'mui-datatables';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FaArrowRightToBracket } from 'react-icons/fa6';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Roles,\r\n  checkStatus,\r\n  clientRoles,\r\n  deposition,\r\n  toastMessage,\r\n} from 'views/Utils/Common';\r\nimport { DownloadButton } from './pdfGenerator/DownloadPDF';\r\nimport RequestsApi from 'api/requests';\r\nimport ConfirmationDialog from './components/ConfirmationDialog';\r\n\r\nexport default function Orders({ value }) {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [subRows, setSubRows] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [orderId, setOrderId] = useState(null);\r\n  const userDetail = JSON.parse(localStorage?.getItem('user'));\r\n  const [startDate, setStartDate] = useState(\r\n    moment().clone().subtract(30, 'days').format('YYYY-MM-DD')\r\n  );\r\n  const [endDate, setEndDate] = useState(\r\n    moment().clone().add(1, 'day').format('YYYY-MM-DD')\r\n  );\r\n  const [downloadQueue, setDownloadQueue] = useState();\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [click, setClick] = useState(false);\r\n  const InputStyle = {\r\n    width: '800px',\r\n    fontSize: '0.675rem',\r\n  };\r\n\r\n  const handleRowSelectionChange = (currentRowsSelected, allRowsSelected) => {\r\n    const rows = includes(clientRoles, userDetail?.role) ? clientData : data;\r\n    const selectedData = filter(rows, (item, index) =>\r\n      includes(\r\n        map(allRowsSelected, (row) => row?.dataIndex),\r\n        index\r\n      )\r\n    );\r\n    setDownloadQueue(selectedData);\r\n  };\r\n\r\n  const clients =\r\n    localStorage?.getItem('clients') &&\r\n    isArray(JSON.parse(localStorage?.getItem('clients'))) &&\r\n    compact(\r\n      map(\r\n        JSON.parse(localStorage?.getItem('clients')),\r\n        (data) => data?.client_name\r\n      )\r\n    );\r\n\r\n  const clientData = !isEmpty(clients)\r\n    ? filter(data, (order) => clients?.includes(order?.client_name))\r\n    : localStorage?.getItem('clients') &&\r\n      JSON.parse(localStorage?.getItem('clients'))[0]?.allClients\r\n    ? data\r\n    : [];\r\n\r\n  const calculateOverallProgressColor = (items, colorType) => {\r\n    let overallColor =\r\n      value === 3 ? '#4B9945' : colorType === 'dark' ? '#9f6e3e' : '#6b503752';\r\n    for (const item of items) {\r\n      if (!item.deadline) continue;\r\n      const currentDate = item?.date_closed ? item?.date_closed : moment();\r\n      const deadlineDate = item.deadline;\r\n      const daysUntilDeadline = moment(currentDate).isAfter(\r\n        moment(deadlineDate)\r\n      );\r\n      const daysDifference = moment(item.deadline).diff(currentDate, 'days');\r\n\r\n      if (deadlineDate && daysUntilDeadline) {\r\n        if (colorType === 'dark') {\r\n          overallColor = '#f60909';\r\n        } else {\r\n          overallColor = '#f8bfbf';\r\n        }\r\n        // Red\r\n        break;\r\n      } else if (deadlineDate && daysDifference <= 3 && daysDifference >= 0) {\r\n        if (colorType === 'dark') {\r\n          overallColor = '#f3905b ';\r\n        } else {\r\n          overallColor = '#e9c2ad'; // Orange\r\n        }\r\n        break;\r\n      } else {\r\n        overallColor;\r\n      }\r\n    }\r\n    return overallColor;\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response =\r\n        value === 2\r\n          ? await fetch(\r\n              `https://imranks.pythonanywhere.com/api/users/listbulkorders/open/${startDate}/${endDate}`\r\n            )\r\n          : await fetch(\r\n              `https://imranks.pythonanywhere.com/api/users/listorders/${\r\n                value === 4\r\n                  ? 'cancelled'\r\n                  : value === 3\r\n                  ? 'close'\r\n                  : value === 1\r\n                  ? 'draft'\r\n                  : 'open'\r\n              }/${startDate}/${endDate}`\r\n            );\r\n\r\n      const json = await response.json();\r\n      let data = JSON.parse(json['data'])?.rowsData;\r\n\r\n      data.forEach((d) => {\r\n        d['subRows'].forEach((s) => {\r\n          setSubRows((oldArray) => {\r\n            const newArray = uniqBy([...oldArray, s], 'order_checks_id');\r\n            return newArray;\r\n          });\r\n        });\r\n      });\r\n\r\n      delete data['subRows'];\r\n      delete data['checks'];\r\n\r\n      const orderList = filter(\r\n        map(data, (item) => ({\r\n          ...item,\r\n          status: item?.status,\r\n        })),\r\n        (row) => row?.status\r\n      );\r\n\r\n      setData(filter(orderList, (data) => data?.status !== 'CANCELLED'));\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const rows = includes(clientRoles, userDetail?.role) ? clientData : data;\r\n    setTableData(rows);\r\n  }, [data, userDetail?.role]);\r\n\r\n  const reopenOrder = () => {\r\n    const res1 = RequestsApi.updateOrder(\r\n      {\r\n        status: 'REOPEN',\r\n        reopened_by_id: userDetail?._id,\r\n        reopened_by_name: userDetail?.username,\r\n        date_reopened: moment().format('YYYY-MM-DD HH:mm:ss'),\r\n        date_closed: null,\r\n      },\r\n      orderId\r\n    );\r\n    res1?.then((res) => {\r\n      if (res?.status === 200) {\r\n        toastMessage('Order reopen successfully');\r\n        handleDailogClose();\r\n        setOrderId(null);\r\n        fetchData();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleDailogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: 'order_id',\r\n      label: 'ORDER NO.',\r\n    },\r\n    {\r\n      name: 'candidate',\r\n      label: 'CANDIDATE NAME',\r\n    },\r\n    {\r\n      name: 'client_name',\r\n      label: 'CLIENT',\r\n      options: {\r\n        display: includes(clientRoles, userDetail?.role) ? false : true,\r\n      },\r\n    },\r\n    {\r\n      name: 'date',\r\n      label: 'ORDER DATE',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => {\r\n          return moment(value).format('DD-MMM-YY');\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'date_enabled',\r\n      label: 'INITIATED DATE',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => {\r\n          return value ? moment(value).format('DD-MMM-YY') : '-';\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'assignee',\r\n      label: 'CREATED BY',\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      name: 'client_project',\r\n      label: 'BILLING IDENTIFIER',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => (value ? value : '-'),\r\n      },\r\n    },\r\n    {\r\n      name: 'progress',\r\n      label: 'PROGRESS',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => {\r\n          const orderCheckList = filter(subRows, {\r\n            order_id: tableMeta?.rowData?.[0],\r\n          });\r\n\r\n          return (\r\n            <div>\r\n              <span\r\n                style={{\r\n                  fontSize: '0.65rem',\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                {round(value, 2)}%\r\n              </span>\r\n              <LinearProgress\r\n                variant='determinate'\r\n                aria-label='direct'\r\n                value={value}\r\n                // color='primary'\r\n                sx={{\r\n                  '& .css-5xe99f-MuiLinearProgress-bar1': {\r\n                    backgroundColor: calculateOverallProgressColor(\r\n                      orderCheckList,\r\n                      'dark'\r\n                    ),\r\n                  },\r\n                  '& .css-t752vm': {\r\n                    backgroundColor: calculateOverallProgressColor(\r\n                      orderCheckList,\r\n                      'dark'\r\n                    ),\r\n                  },\r\n                  ' &.MuiLinearProgress-root': {\r\n                    backgroundColor: calculateOverallProgressColor(\r\n                      orderCheckList,\r\n                      'light'\r\n                    ),\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'score',\r\n      label: 'Deposition',\r\n      options: {\r\n        display: false,\r\n      },\r\n    },\r\n    {\r\n      name: 'status',\r\n      label: 'STATUS',\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return tableMeta['rowData'][8] ? (\r\n            <span\r\n              style={{\r\n                color: find(deposition, { label: tableMeta['rowData'][8] })\r\n                  ?.color,\r\n              }}\r\n            >\r\n              {tableMeta['rowData'][8]}\r\n            </span>\r\n          ) : find(checkStatus, { label: tableMeta['rowData'][9] }) ? (\r\n            <span\r\n              style={{\r\n                color: find(checkStatus, { label: tableMeta['rowData'][9] })\r\n                  ?.color,\r\n              }}\r\n            >\r\n              {tableMeta['rowData'][9]}\r\n            </span>\r\n          ) : (\r\n            <span> {tableMeta['rowData'][9]}</span>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'action',\r\n      label: 'ACTION',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (rowValue, tableMeta) => {\r\n          return (\r\n            <div style={{ display: 'flex', gap: 6 }}>\r\n              {value === 3 && userDetail?.role === Roles?.STAFF && (\r\n                <Button\r\n                  variant='contained'\r\n                  sx={{\r\n                    backgroundColor: '#bf1e2e',\r\n                    textTransform: 'none',\r\n                    fontSize: '0.8rem',\r\n                    padding: '3px 7px',\r\n                  }}\r\n                  onClick={() => {\r\n                    setOrderId(tableMeta['rowData'][0]);\r\n                    setOpen(true);\r\n                  }}\r\n                >\r\n                  Reopen\r\n                </Button>\r\n              )}\r\n              <span\r\n                onClick={() =>\r\n                  navigate('/order/orderdetails/' + tableMeta['rowData'][0])\r\n                }\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <ReadMoreIcon\r\n                  sx={{\r\n                    color: '#524f4f',\r\n                  }}\r\n                />\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const clientOrder = [\r\n    {\r\n      name: 'order_id',\r\n      label: 'ORDER NO.',\r\n    },\r\n    {\r\n      name: 'date',\r\n      label: 'ORDER DATE',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => {\r\n          return moment(value).format('DD-MMM-YY');\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'candidate',\r\n      label: 'CANDIDATE NAME',\r\n    },\r\n    {\r\n      name: 'client_project',\r\n      label: 'BILLING IDENTIFIER',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => (value ? value : '-'),\r\n      },\r\n    },\r\n    {\r\n      name: 'progress',\r\n      label: 'PROGRESS',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (value, tableMeta) => {\r\n          const orderCheckList = filter(subRows, {\r\n            order_id: tableMeta?.rowData?.[0],\r\n          });\r\n\r\n          return (\r\n            <div style={{ width: '50%' }}>\r\n              <span\r\n                style={{\r\n                  fontSize: '0.65rem',\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                {round(value, 2)}%\r\n              </span>\r\n              <LinearProgress\r\n                variant='determinate'\r\n                aria-label='direct'\r\n                value={value}\r\n                sx={{\r\n                  '& .css-5xe99f-MuiLinearProgress-bar1': {\r\n                    backgroundColor: calculateOverallProgressColor(\r\n                      orderCheckList,\r\n                      'dark'\r\n                    ),\r\n                  },\r\n                  '& .css-t752vm': {\r\n                    backgroundColor: calculateOverallProgressColor(\r\n                      orderCheckList,\r\n                      'dark'\r\n                    ),\r\n                  },\r\n                  ' &.MuiLinearProgress-root': {\r\n                    backgroundColor: calculateOverallProgressColor(\r\n                      orderCheckList,\r\n                      'light'\r\n                    ),\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'score',\r\n      label: 'Deposition',\r\n      options: {\r\n        display: false,\r\n      },\r\n    },\r\n    {\r\n      name: 'status',\r\n      label: 'STATUS',\r\n      options: {\r\n        customBodyRender: (value, tableMeta) => {\r\n          return tableMeta['rowData'][5] ? (\r\n            <span\r\n              style={{\r\n                color: find(deposition, { label: tableMeta['rowData'][5] })\r\n                  ?.color,\r\n              }}\r\n            >\r\n              {tableMeta['rowData'][5]}\r\n            </span>\r\n          ) : find(checkStatus, { label: value }) ? (\r\n            <span\r\n              style={{\r\n                color: find(checkStatus, { label: value })?.color,\r\n              }}\r\n            >\r\n              {value}\r\n            </span>\r\n          ) : (\r\n            <span> {value}</span>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'action',\r\n      label: 'ACTION',\r\n      options: {\r\n        filter: false,\r\n        customBodyRender: (rowValue, tableMeta) => {\r\n          return (\r\n            <div style={{ display: 'flex', gap: 6 }}>\r\n              <span\r\n                onClick={() =>\r\n                  navigate('/order/orderdetails/' + tableMeta['rowData'][0])\r\n                }\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                <ReadMoreIcon\r\n                  sx={{\r\n                    color: '#524f4f',\r\n                  }}\r\n                />\r\n              </span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [\r\n    userDetail?.clientInfo?.approveToClose,\r\n    userDetail?.role,\r\n    userDetail?.support,\r\n  ]);\r\n\r\n  const transformChecks = (checks) => {\r\n    const checkCount = {};\r\n\r\n    return checks.map((check) => {\r\n      const baseName = check.check.includes('-')\r\n        ? check.check\r\n        : truncate(check.check.toUpperCase(), {\r\n            length: 3, // Truncate to the first 3 characters\r\n            omission: '', // No omission string as we want exactly 3 characters\r\n          });\r\n\r\n      if (!checkCount[baseName]) {\r\n        checkCount[baseName] = 1;\r\n      } else {\r\n        checkCount[baseName] += 1;\r\n      }\r\n\r\n      return {\r\n        ...check,\r\n        check: `${baseName}-${checkCount[baseName]}`,\r\n      };\r\n    });\r\n  };\r\n\r\n  const options = {\r\n    expandableRows: true,\r\n    filterOptions: 'fullWidth',\r\n    selectableRows: value === 3 ? true : 'none',\r\n    print: false,\r\n    rowsPerPageOptions: [30, 50, 100],\r\n    rowsPerPage: 30,\r\n    viewColumns: false,\r\n    downloadOptions: {\r\n      filterOptions: {\r\n        useDisplayedColumnsOnly: true,\r\n        useDisplayedRowsOnly: true,\r\n      },\r\n    },\r\n    renderExpandableRow: (rowData, tableMeta) => {\r\n      const subRowsList = subRows.filter((row) => {\r\n        return row.order_id === rowData[0];\r\n      });\r\n      let checkrow = transformChecks(subRowsList);\r\n\r\n      return (\r\n        <React.Fragment>\r\n          <tr>\r\n            <td colSpan={12}>\r\n              <TableContainer component={Paper}>\r\n                <Table aria-label='simple table'>\r\n                  <TableHead>\r\n                    <TableRow sx={{ background: '#d9e4eb' }}>\r\n                      <TableCell />\r\n                      <TableCell\r\n                        style={{\r\n                          fontSize: '0.8rem',\r\n                          paddingLeft: '4rem',\r\n                          fontWeight: 'bolder',\r\n                        }}\r\n                      >\r\n                        {includes(clientRoles, userDetail?.role)\r\n                          ? 'Component'\r\n                          : 'Check'}{' '}\r\n                        #\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{\r\n                          fontSize: '0.8rem',\r\n                          paddingLeft: '4rem',\r\n                          fontWeight: 'bolder',\r\n                        }}\r\n                      >\r\n                        {includes(clientRoles, userDetail?.role)\r\n                          ? 'Components'\r\n                          : 'Checks'}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ fontSize: '0.8rem', fontWeight: 'bolder' }}\r\n                      >\r\n                        Package\r\n                      </TableCell>\r\n                      {!includes(clientRoles, userDetail?.role) && (\r\n                        <TableCell\r\n                          style={{ fontSize: '0.8rem', fontWeight: 'bolder' }}\r\n                        >\r\n                          Assigned To\r\n                        </TableCell>\r\n                      )}\r\n                      <TableCell\r\n                        style={{ fontSize: '0.8rem', fontWeight: 'bolder' }}\r\n                      >\r\n                        Initiated Date\r\n                      </TableCell>\r\n                      {!includes(clientRoles, userDetail?.role) && (\r\n                        <TableCell\r\n                          style={{ fontSize: '0.8rem', fontWeight: 'bolder' }}\r\n                        >\r\n                          Deadline\r\n                        </TableCell>\r\n                      )}\r\n                      <TableCell\r\n                        style={{ fontSize: '0.8rem', fontWeight: 'bolder' }}\r\n                      >\r\n                        Status\r\n                      </TableCell>\r\n                      <TableCell\r\n                        style={{ fontSize: '0.8rem', fontWeight: 'bolder' }}\r\n                      />\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {checkrow?.map((row, i) => (\r\n                      <TableRow\r\n                        key={i}\r\n                        style={\r\n                          i % 2 === 0\r\n                            ? { background: '#fff' }\r\n                            : { background: '#f0f8ff' }\r\n                        }\r\n                      >\r\n                        <TableCell />\r\n                        <TableCell\r\n                          component='th'\r\n                          scope='row'\r\n                          style={{ fontSize: '0.7rem' }}\r\n                        >\r\n                          {row?.order_checks_id ? row?.order_checks_id : '-'}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            fontSize: '0.7rem',\r\n                            paddingLeft: '4rem',\r\n                          }}\r\n                        >\r\n                          <Tooltip\r\n                            title={subRowsList[i]?.check}\r\n                            arrow\r\n                            placement='top'\r\n                          >\r\n                            <span>{row.check}</span>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component='th'\r\n                          scope='row'\r\n                          style={{ fontSize: '0.7rem' }}\r\n                        >\r\n                          {row?.Package}\r\n                        </TableCell>\r\n                        {!includes(clientRoles, userDetail?.role) && (\r\n                          <TableCell\r\n                            component='th'\r\n                            scope='row'\r\n                            style={{ fontSize: '0.7rem' }}\r\n                          >\r\n                            {row?.assignedTo ? row?.assignedTo : '-'}\r\n                          </TableCell>\r\n                        )}\r\n                        <TableCell\r\n                          component='th'\r\n                          scope='row'\r\n                          style={{ fontSize: '0.7rem' }}\r\n                        >\r\n                          {row?.date_initiated ? row?.date_initiated : '-'}\r\n                        </TableCell>\r\n                        {!includes(clientRoles, userDetail?.role) && (\r\n                          <TableCell\r\n                            component='th'\r\n                            scope='row'\r\n                            style={{ fontSize: '0.7rem' }}\r\n                          >\r\n                            {row?.deadline ? row?.deadline : '-'}{' '}\r\n                          </TableCell>\r\n                        )}\r\n                        <TableCell\r\n                          component='th'\r\n                          scope='row'\r\n                          style={{ fontSize: '0.7rem' }}\r\n                        >\r\n                          {row?.status}\r\n                        </TableCell>\r\n                        {rowData[4] !== '-' &&\r\n                          !includes(clientRoles, userDetail?.role) && (\r\n                            <TableCell component='th' scope='row'>\r\n                              <FaArrowRightToBracket\r\n                                onClick={() =>\r\n                                  navigate(\r\n                                    '/orderchecks/checkDetails/' +\r\n                                      row?.order_checks_id\r\n                                  )\r\n                                }\r\n                                cursor='pointer'\r\n                                size={15}\r\n                              />\r\n                            </TableCell>\r\n                          )}\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </td>\r\n          </tr>\r\n        </React.Fragment>\r\n      );\r\n    },\r\n    customFilterDialogFooter: () => (\r\n      <div\r\n        style={{\r\n          paddingTop: '3rem',\r\n          width: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          gap: 18,\r\n        }}\r\n      >\r\n        <TextField\r\n          label='Start Date'\r\n          type='date'\r\n          value={startDate}\r\n          fullWidth\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <TextField\r\n          label='End Date'\r\n          type='date'\r\n          value={endDate}\r\n          fullWidth\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n        <Button\r\n          sx={{ mt: 10, pr: 4, pl: 4 }}\r\n          onClick={fetchData}\r\n          variant='contained'\r\n        >\r\n          Apply\r\n        </Button>\r\n      </div>\r\n    ),\r\n    onRowSelectionChange: handleRowSelectionChange,\r\n    customToolbarSelect: (selectedRows, displayData, setSelectedRows) => (\r\n      <CustomToolbarSelect\r\n        onDownloadAll={() => {\r\n          setCurrentIndex(0);\r\n          setClick(true);\r\n        }}\r\n        downloadQueue={downloadQueue}\r\n      />\r\n    ),\r\n  };\r\n\r\n  const getMuiTheme = () =>\r\n    createTheme({\r\n      components: {\r\n        MUIDataTable: {\r\n          styleOverrides: {\r\n            root: {\r\n              boxShadow: 'none',\r\n              backgroundColor: '#FFF',\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableHeadCell: {\r\n          styleOverrides: {\r\n            root: {\r\n              backgroundColor: '#2152a1',\r\n              color: '#fff',\r\n              border: 'none',\r\n              '&:last-of-type': {\r\n                borderTopRightRadius: '1rem',\r\n                // borderBottomRightRadius: \"1rem\",\r\n              },\r\n            },\r\n            toolButton: {\r\n              fontWeight: 'bold',\r\n              fontSize: '0.7rem',\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableSelectCell: {\r\n          styleOverrides: {\r\n            headerCell: {\r\n              border: 'none',\r\n              borderTopLeftRadius: '1rem',\r\n              // borderBottomLeftRadius: '1rem',\r\n              backgroundColor: '#2152a1',\r\n              '& .MuiCheckbox-root': {\r\n                color: '#fff',\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MuiToolbar: {\r\n          styleOverrides: {\r\n            root: {\r\n              minHeight: '30px!important',\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          styleOverrides: {\r\n            root: {\r\n              '&:nth-of-type(even)': {\r\n                backgroundColor: '#EEF2FF',\r\n              },\r\n              '&:nth-of-type(odd)': {\r\n                backgroundColor: '#FFF',\r\n              },\r\n              '& td': {\r\n                textAlign: 'left', // Center align body text data\r\n                border: 'none',\r\n              },\r\n              marginBottom: '10px',\r\n            },\r\n          },\r\n        },\r\n        MuiTableCell: {\r\n          styleOverrides: {\r\n            root: {\r\n              padding: '4px !important',\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableBodyRow: {\r\n          styleOverrides: {\r\n            root: {\r\n              '&:nth-of-type(even)': {\r\n                backgroundColor: '#dde1e9',\r\n              },\r\n            },\r\n          },\r\n        },\r\n        MUIDataTableBodyCell: {\r\n          styleOverrides: {\r\n            root: {\r\n              fontSize: '0.7rem',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n  const bulkOrderColumns = [...columns];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      click &&\r\n      value === 3 &&\r\n      downloadQueue?.length > 0 &&\r\n      currentIndex < downloadQueue.length\r\n    ) {\r\n      const downloadLink = document.getElementById(\r\n        `download-link-${currentIndex}`\r\n      );\r\n      downloadLink?.click();\r\n      setCurrentIndex(currentIndex + 1);\r\n    } else {\r\n      setClick(false);\r\n    }\r\n  }, [currentIndex, downloadQueue, click]);\r\n\r\n  return (\r\n    <Grid item fullwidth='true' width='100%'>\r\n      {loading ? (\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <CircularProgress color='inherit' size={20} />\r\n        </div>\r\n      ) : (\r\n        <ThemeProvider theme={getMuiTheme()}>\r\n          <MUIDataTable\r\n            title={''}\r\n            data={tableData}\r\n            columns={\r\n              value === 2\r\n                ? [\r\n                    bulkOrderColumns[0],\r\n                    {\r\n                      name: 'bulk_order_id',\r\n                      label: 'BULK ORDER #',\r\n                    },\r\n                    ...bulkOrderColumns.slice(1),\r\n                  ]\r\n                : includes(clientRoles, userDetail?.role)\r\n                ? clientOrder\r\n                : columns\r\n            }\r\n            options={options}\r\n            style={{ ...InputStyle }}\r\n          />\r\n        </ThemeProvider>\r\n      )}\r\n      {open && (\r\n        <ConfirmationDialog\r\n          open={open}\r\n          handleDailogClose={handleDailogClose}\r\n          handleChangeAssignee={reopenOrder}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst CustomToolbarSelect = ({ onDownloadAll, downloadQueue }) => {\r\n  return (\r\n    <div>\r\n      {downloadQueue?.length > 0 && (\r\n        <>\r\n          <Button\r\n            variant='outlined'\r\n            sx={{\r\n              textTransform: 'none',\r\n              px: 1,\r\n              py: 0.4,\r\n              border: '1px solid #BE1E2E',\r\n              color: '#BE1E2E',\r\n              mr: 3,\r\n              my: 1,\r\n            }}\r\n            onClick={onDownloadAll}\r\n          >\r\n            Download Reports\r\n          </Button>\r\n          {downloadQueue?.map((orderDetail, index) => (\r\n            <div key={index} style={{ display: 'table-column' }}>\r\n              <DownloadButton\r\n                orderDetail={orderDetail}\r\n                fileName={`Order_${orderDetail?.order_id}.pdf`}\r\n                id={`download-link-${index}`}\r\n              />\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Box, Button, Tab, Tabs } from '@mui/material';\nimport { useState } from 'react';\nimport Orders from '.';\nimport { includes } from 'lodash';\nimport { Roles, clientRoles } from 'views/Utils/Common';\nimport { useNavigate } from 'react-router';\n\nconst OrderTab = () => {\n  const [value, setValue] = useState(0);\n  const navigate = useNavigate();\n  const userDetail = JSON.parse(localStorage?.getItem('user'));\n\n  const handleTabChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n        <Box\n          sx={{\n            width: '100%',\n            borderRadius: 2,\n          }}\n        >\n          <Tabs value={value} aria-label='basic tabs example'>\n            <Tab\n              value={0}\n              label='Open Orders'\n              sx={{\n                textTransform: 'none',\n                backgroundColor: '#e6e6e6',\n                mx: 1,\n                borderRadius: 2,\n                py: 0,\n                height: 1,\n              }}\n              onClick={() => handleTabChange(0)}\n            />\n            <Tab\n              label='Draft Orders'\n              sx={{\n                textTransform: 'none',\n                backgroundColor: '#e6e6e6',\n                mx: 1,\n                borderRadius: 2,\n              }}\n              onClick={() => handleTabChange(1)}\n            />\n            <Tab\n              value={2}\n              label='Bulk Orders'\n              sx={{\n                textTransform: 'none',\n                backgroundColor: '#e6e6e6',\n                mx: 1,\n                borderRadius: 2,\n                display: includes(clientRoles, userDetail?.role)\n                  ? 'none'\n                  : 'block',\n              }}\n              onClick={() => handleTabChange(2)}\n            />\n            <Tab\n              value={3}\n              label='Closed Orders'\n              sx={{\n                textTransform: 'none',\n                backgroundColor: '#e6e6e6',\n                mx: 1,\n                borderRadius: 2,\n              }}\n              onClick={() => handleTabChange(3)}\n            />\n            <Tab\n              value={4}\n              label='Cancel Order'\n              sx={{\n                textTransform: 'none',\n                backgroundColor: '#e6e6e6',\n                mx: 1,\n                borderRadius: 2,\n                display: userDetail?.role === Roles?.ADMIN ? 'block' : 'none',\n              }}\n              onClick={() => handleTabChange(4)}\n            />\n          </Tabs>\n        </Box>\n        <Box sx={{ display: 'flex' }}>\n          <Button\n            variant='contained'\n            name='Submit'\n            className='button'\n            type='button'\n            sx={{ whiteSpace: 'nowrap', textTransform: 'none' }}\n            onClick={() => navigate('/order/createorders')}\n          >\n            Create Order\n          </Button>\n          <Button\n            variant='contained'\n            name='Submit'\n            className='button'\n            type='submit'\n            sx={{ whiteSpace: 'nowrap', textTransform: 'none' }}\n            onClick={() => navigate('/order/candidateOrder')}\n          >\n            Create Candidate Order\n          </Button>\n          {!includes(clientRoles, userDetail?.role) && (\n            <Button\n              variant='contained'\n              name='Submit'\n              className='button'\n              type='submit'\n              sx={{ whiteSpace: 'nowrap', textTransform: 'none' }}\n              onClick={() => navigate('/order/candidateOrder')}\n            >\n              Create Bulk Order\n            </Button>\n          )}\n        </Box>\n      </Box>\n      <Box sx={{ width: '100%', mt: 1 }}>\n        {value === 0 && <Orders value={value} />}\n        {value === 1 && <Orders value={value} />}\n        {value === 2 && <Orders value={value} />}\n        {value === 3 && <Orders value={value} />}\n        {value === 4 && <Orders value={value} />}\n      </Box>\n    </>\n  );\n};\nexport default OrderTab;\n","import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\n\n\nconst ConfirmationDialog = ({ open, handleDailogClose, handleChangeAssignee }) => {\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleDailogClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n        sx={{ '& .MuiDialog-paper': { width: '500px', height: 'auto' } }}\n      >\n        <DialogTitle id='alert-dialog-title'><h2>Confirmation</h2></DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description' sx={{fontSize:'0.85rem!important'}}>\n          Are you sure you want to proceed?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions sx={{pr:4, pb:3}}>\n          <Button onClick={handleDailogClose} color='primary'  variant='contained'>\n            Cancel\n          </Button>\n          <Button onClick={handleChangeAssignee} color='primary' autoFocus  variant='contained'>\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ConfirmationDialog;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h9v2h-9zm0 8h9v2h-9zm3-4h6v2h-6zm-3 1L8 7v4H2v2h6v4z\"\n}), 'ReadMore');\nexports.default = _default;"],"names":["Orders","_ref","_localStorage","_localStorage2","_localStorage3","_localStorage4","_localStorage5","_JSON$parse$","_localStorage6","_userDetail$clientInf","value","navigate","useNavigate","data","setData","useState","subRows","setSubRows","tableData","setTableData","loading","setLoading","open","setOpen","orderId","setOrderId","userDetail","JSON","parse","localStorage","getItem","startDate","setStartDate","moment","clone","subtract","format","endDate","setEndDate","add","downloadQueue","setDownloadQueue","currentIndex","setCurrentIndex","click","setClick","clients","isArray","compact","map","client_name","clientData","isEmpty","allClients","filter","order","includes","calculateOverallProgressColor","items","colorType","overallColor","item","deadline","currentDate","date_closed","deadlineDate","daysUntilDeadline","isAfter","daysDifference","diff","fetchData","async","_JSON$parse","response","fetch","concat","json","rowsData","forEach","d","s","oldArray","uniqBy","orderList","status","row","error","console","useEffect","rows","clientRoles","role","handleDailogClose","columns","name","label","options","display","customBodyRender","tableMeta","_tableMeta$rowData","orderCheckList","order_id","rowData","_jsxs","children","style","fontSize","justifyContent","round","_jsx","LinearProgress","variant","sx","backgroundColor","_find","_find2","color","find","deposition","checkStatus","rowValue","gap","Roles","Button","textTransform","padding","onClick","cursor","ReadMoreIcon","clientOrder","_tableMeta$rowData2","width","_find3","_find4","clientInfo","approveToClose","support","expandableRows","filterOptions","selectableRows","print","rowsPerPageOptions","rowsPerPage","viewColumns","downloadOptions","useDisplayedColumnsOnly","useDisplayedRowsOnly","renderExpandableRow","subRowsList","checkrow","checks","checkCount","check","baseName","truncate","toUpperCase","length","omission","transformChecks","React","colSpan","TableContainer","component","Paper","Table","TableHead","TableRow","background","TableCell","paddingLeft","fontWeight","TableBody","i","_subRowsList$i","scope","order_checks_id","Tooltip","title","arrow","placement","Package","assignedTo","date_initiated","FaArrowRightToBracket","size","customFilterDialogFooter","paddingTop","TextField","type","fullWidth","onChange","e","target","InputLabelProps","shrink","mt","pr","pl","onRowSelectionChange","handleRowSelectionChange","currentRowsSelected","allRowsSelected","selectedData","index","dataIndex","customToolbarSelect","selectedRows","displayData","setSelectedRows","CustomToolbarSelect","onDownloadAll","bulkOrderColumns","downloadLink","document","getElementById","Grid","fullwidth","CircularProgress","ThemeProvider","theme","createTheme","components","MUIDataTable","styleOverrides","root","boxShadow","MUIDataTableHeadCell","border","borderTopRightRadius","toolButton","MUIDataTableSelectCell","headerCell","borderTopLeftRadius","MuiToolbar","minHeight","MUIDataTableBodyRow","textAlign","marginBottom","MuiTableCell","MUIDataTableBodyCell","slice","ConfirmationDialog","handleChangeAssignee","reopenOrder","res1","RequestsApi","reopened_by_id","_id","reopened_by_name","username","date_reopened","then","res","toastMessage","_ref2","_Fragment","px","py","mr","my","orderDetail","DownloadButton","fileName","id","OrderTab","setValue","handleTabChange","newValue","Box","borderRadius","Tabs","Tab","mx","height","className","whiteSpace","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","pb","autoFocus","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}